{
  "contractName": "Staking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "crowdAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "ErrorGetTheprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "chainlinkAddress",
          "type": "address"
        }
      ],
      "name": "StakeToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "chainlinkAddress",
          "type": "address"
        }
      ],
      "name": "UnStakeToken",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ERC20Interface",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "crowd",
      "outputs": [
        {
          "internalType": "contract CrowdsaleERC20Chainlink",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "elapsedTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "tempRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "tempRewardsUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "tokenANTC",
      "outputs": [
        {
          "internalType": "contract ERC20Chainlink",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "chainlinkAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UnStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetTokenANTCAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "chainlinkAddress",
          "type": "address"
        }
      ],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTokenRewardByUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDataUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startStaking",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stopStaking",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountReward",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "chainlinkAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenERC20Address",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isStaking",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "unstaked",
              "type": "bool"
            }
          ],
          "internalType": "struct Staking.staker",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"crowdAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"ErrorGetTheprice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"chainlinkAddress\",\"type\":\"address\"}],\"name\":\"StakeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"chainlinkAddress\",\"type\":\"address\"}],\"name\":\"UnStakeToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ERC20Interface\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetTokenANTCAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"chainlinkAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UnStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crowd\",\"outputs\":[{\"internalType\":\"contract CrowdsaleERC20Chainlink\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"elapsedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDataUser\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startStaking\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stopStaking\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountReward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"chainlinkAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenERC20Address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStaking\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unstaked\",\"type\":\"bool\"}],\"internalType\":\"struct Staking.staker\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"chainlinkAddress\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenRewardByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tempRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tempRewardsUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenANTC\",\"outputs\":[{\"internalType\":\"contract ERC20Chainlink\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Node/StakingGanache/contracts/staking.sol\":\"Staking\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Node/StakingGanache/contracts/CrowdsaleERC20Chainlink.sol\":{\"keccak256\":\"0x9ff0999b7def2b33e12ee69d9285cb60f7ea88051ae1c25f2b966a58575ec4f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04ba0fde5adb4fd5b1866edb4f8fff4acdbc781cb2504f2721e5960001615d27\",\"dweb:/ipfs/QmX8ZDTU1CJVDYpCvYHzTYRakhmCjtGEKbAemnorRN5otn\"]},\"/C/Node/StakingGanache/contracts/ERC20Chainlink.sol\":{\"keccak256\":\"0x9509e3cc62828433547fffc5c28c615a6b4b446f38d816d429df0ba230a2880c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd82f70b3ecd990a8cf3ba78781fe54dde5a5429ff41c288f38307498b1035b\",\"dweb:/ipfs/QmPxGpvTDSoxhLk1pXKCtUW5qVDydnEU7is7zkpY4zemPn\"]},\"/C/Node/StakingGanache/contracts/staking.sol\":{\"keccak256\":\"0x2f4d01b46e853545f118a2e8d9636de8065140a7758cfbd47daacb1ec8d44b69\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9f7882f7417bbdac51c67bea0f098fd60f9499258d810fea676a1013c816dbbb\",\"dweb:/ipfs/QmNVm3z4KgwKo8dwwFfhnMNx9n49QQsiY8TZkcMzEnYvmh\"]},\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x1862840d741dedb36e774534b877a13b5187555e3b78b8d2815f898b0dc02268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64a15f4349aea6e60703f581a6280b71d6adb35ee74d2f3c4f130a2adc3efee3\",\"dweb:/ipfs/QmdVoSQvGfJNPnjQsAs7ZN3ueWghzTa72jSqzhGiQNDpkL\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003e9938038062003e9983398181016040528101906200003791906200011a565b6040516200004590620000f5565b620000509062000194565b604051809103906000f0801580156200006d573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200027c565b611a5a806200243f83390190565b600081519050620001148162000262565b92915050565b6000602082840312156200012d57600080fd5b60006200013d8482850162000103565b91505092915050565b600062000155600483620001cb565b9150620001628262000210565b602082019050919050565b60006200017c600883620001cb565b9150620001898262000239565b602082019050919050565b60006040820190508181036000830152620001af816200016d565b90508181036020830152620001c48162000146565b9050919050565b600082825260208201905092915050565b6000620001e982620001f0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f414e544300000000000000000000000000000000000000000000000000000000600082015250565b7f414e544d4f4e4559000000000000000000000000000000000000000000000000600082015250565b6200026d81620001dc565b81146200027957600080fd5b50565b6121b3806200028c6000396000f3fe608060405234801561001057600080fd5b50600436106100d1576000357c010000000000000000000000000000000000000000000000000000000090048063ca7bb3f51161008e578063ca7bb3f51461018a578063d02641a0146101a8578063d9c4c20e146101d8578063ebedb8b3146101f6578063ecb9061514610212578063f4621daf1461021c576100d1565b80631bbc4b83146100d6578063227b0510146100f45780632dc647c41461011257806351453f9d14610130578063bb02b7491461014e578063ca0b66901461016c575b600080fd5b6100de61023a565b6040516100eb9190611cc7565b60405180910390f35b6100fc610260565b6040516101099190611d3e565b60405180910390f35b61011a610266565b6040516101279190611bcb565b60405180910390f35b61013861028f565b6040516101459190611d3e565b60405180910390f35b610156610295565b6040516101639190611d3e565b60405180910390f35b6101746102df565b6040516101819190611cac565b60405180910390f35b610192610303565b60405161019f9190611c91565b60405180910390f35b6101c260048036038101906101bd9190611952565b610329565b6040516101cf9190611d3e565b60405180910390f35b6101e06103f9565b6040516101ed9190611d3e565b60405180910390f35b610210600480360381019061020b91906119a4565b6103ff565b005b61021a610936565b005b610224610c42565b6040516102319190611d22565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055481565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344a11f65836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103a29190611bcb565b60206040518083038186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f29190611a09565b9050919050565b60035481565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160149054906101000a900460ff161561048f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048690611ce2565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160159054906101000a900460ff16156105bd57600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055600282016000905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556005820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556005820160146101000a81549060ff02191690556005820160156101000a81549060ff021916905550505b61068d600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ed47d97846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106379190611bcb565b60206040518083038186803b15801561064f57600080fd5b505afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610687919061197b565b82610da4565b60405180610100016040528042815260200160008152602001828152602001600081526020018373ffffffffffffffffffffffffffffffffffffffff168152602001600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ed47d97856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107469190611bcb565b60206040518083038186803b15801561075e57600080fd5b505afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610796919061197b565b73ffffffffffffffffffffffffffffffffffffffff16815260200160011515815260200160001515815250600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff02191690831515021790555060e08201518160050160156101000a81548160ff0219169083151502179055509050507f137aa2211519a57a4d90dfe2e629ca21eb9e78f178fab57e2ea5c6e1058f4d0c338360405161092a929190611be6565b60405180910390a15050565b42600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610985610efe565b61098d61119e565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a8c929190611c46565b602060405180830381600087803b158015610aa657600080fd5b505af1158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade91906119e0565b50610ae7611371565b610aef61147f565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160156101000a81548160ff0219169083151502179055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160146101000a81548160ff0219169083151502179055507fcf89c87736de41f5ff70556801e20ae860b7146d71cedebd3df684c7dfae720533600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610c38929190611be6565b60405180910390a1565b610c4a611874565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180610100016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160149054906101000a900460ff161515151581526020016005820160159054906101000a900460ff161515151581525050905090565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dfb929190611c46565b602060405180830381600087803b158015610e1557600080fd5b505af1158015610e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4d91906119e0565b508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ea793929190611c0f565b602060405180830381600087803b158015610ec157600080fd5b505af1158015610ed5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef991906119e0565b505050565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ff9929190611c46565b602060405180830381600087803b15801561101357600080fd5b505af1158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104b91906119e0565b50600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161114993929190611c0f565b602060405180830381600087803b15801561116357600080fd5b505af1158015611177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119b91906119e0565b50565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344a11f65600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161127a9190611bcb565b60206040518083038186803b15801561129257600080fd5b505afa1580156112a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ca9190611a09565b905060006112df6112d9611615565b836116b3565b905061132d81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546116b3565b905061134181670de0b6b3a76400006116c9565b9050611351816305f5e1006116c9565b90506000611366826113616116df565b6116c9565b905080935050505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161142a929190611c46565b602060405180830381600087803b15801561144457600080fd5b505af1158015611458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147c91906119e0565b50565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541415611505576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fc90611d02565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115c093929190611c0f565b602060405180830381600087803b1580156115da57600080fd5b505af11580156115ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161291906119e0565b50565b60008061163561162e600a670de0b6b3a76400006116b3565b60646116c9565b905060006301d5560090506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154426116909190611e1b565b905060006116a76116a185846116b3565b846116c9565b90508094505050505090565b600081836116c19190611dc1565b905092915050565b600081836116d79190611d90565b905092915050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344a11f6560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117789190611bcb565b60206040518083038186803b15801561179057600080fd5b505afa9250505080156117c157506040513d601f19601f820116820180604052508101906117be9190611a09565b60015b61186c576117cd611ff4565b806308c379a014156117f757506117e26120a2565b806117ed57506117f9565b600a915050611871565b505b3d8060008114611825576040519150601f19603f3d011682016040523d82523d6000602084013e61182a565b606091505b507feaed56172f8b6b67eab86d8bb0f1fd08631a823b86f5c42cb345b2e5b289702a8160405161185a9190611c6f565b60405180910390a1600a915050611871565b809150505b90565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581525090565b6000813590506118f881612138565b92915050565b60008151905061190d81612138565b92915050565b6000815190506119228161214f565b92915050565b60008135905061193781612166565b92915050565b60008151905061194c81612166565b92915050565b60006020828403121561196457600080fd5b6000611972848285016118e9565b91505092915050565b60006020828403121561198d57600080fd5b600061199b848285016118fe565b91505092915050565b600080604083850312156119b757600080fd5b60006119c5858286016118e9565b92505060206119d685828601611928565b9150509250929050565b6000602082840312156119f257600080fd5b6000611a0084828501611913565b91505092915050565b600060208284031215611a1b57600080fd5b6000611a298482850161193d565b91505092915050565b611a3b81611e4f565b82525050565b611a4a81611e4f565b82525050565b611a5981611e61565b82525050565b6000611a6a82611d63565b611a748185611d6e565b9350611a84818560208601611f03565b611a8d81612016565b840191505092915050565b611aa181611e97565b82525050565b611ab081611ebb565b82525050565b611abf81611edf565b82525050565b6000611ad2602083611d7f565b9150611add82612050565b602082019050919050565b6000611af5601c83611d7f565b9150611b0082612079565b602082019050919050565b61010082016000820151611b226000850182611bad565b506020820151611b356020850182611bad565b506040820151611b486040850182611bad565b506060820151611b5b6060850182611bad565b506080820151611b6e6080850182611a32565b5060a0820151611b8160a0850182611a32565b5060c0820151611b9460c0850182611a50565b5060e0820151611ba760e0850182611a50565b50505050565b611bb681611e8d565b82525050565b611bc581611e8d565b82525050565b6000602082019050611be06000830184611a41565b92915050565b6000604082019050611bfb6000830185611a41565b611c086020830184611a41565b9392505050565b6000606082019050611c246000830186611a41565b611c316020830185611a41565b611c3e6040830184611bbc565b949350505050565b6000604082019050611c5b6000830185611a41565b611c686020830184611bbc565b9392505050565b60006020820190508181036000830152611c898184611a5f565b905092915050565b6000602082019050611ca66000830184611a98565b92915050565b6000602082019050611cc16000830184611aa7565b92915050565b6000602082019050611cdc6000830184611ab6565b92915050565b60006020820190508181036000830152611cfb81611ac5565b9050919050565b60006020820190508181036000830152611d1b81611ae8565b9050919050565b600061010082019050611d386000830184611b0b565b92915050565b6000602082019050611d536000830184611bbc565b92915050565b6000604051905090565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611d9b82611e8d565b9150611da683611e8d565b925082611db657611db5611f96565b5b828204905092915050565b6000611dcc82611e8d565b9150611dd783611e8d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e1057611e0f611f67565b5b828202905092915050565b6000611e2682611e8d565b9150611e3183611e8d565b925082821015611e4457611e43611f67565b5b828203905092915050565b6000611e5a82611e6d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ea282611ea9565b9050919050565b6000611eb482611e6d565b9050919050565b6000611ec682611ecd565b9050919050565b6000611ed882611e6d565b9050919050565b6000611eea82611ef1565b9050919050565b6000611efc82611e6d565b9050919050565b60005b83811015611f21578082015181840152602081019050611f06565b83811115611f30576000848401525b50505050565b611f3f82612016565b810181811067ffffffffffffffff82111715611f5e57611f5d611fc5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156120135760046000803e612010600051612027565b90505b90565b6000601f19601f8301169050919050565b60007c010000000000000000000000000000000000000000000000000000000082049050919050565b7f596f75206861766520616c7265616479207374616b65206f6e6520746f6b656e600082015250565b7f526577617264206973206e6f74207965742063616c63756c6174656400000000600082015250565b600060443d10156120b257612135565b6120ba611d59565b60043d036004823e80513d602482011167ffffffffffffffff821117156120e2575050612135565b808201805167ffffffffffffffff8111156121005750505050612135565b80602083010160043d03850181111561211d575050505050612135565b61212c82602001850186611f36565b82955050505050505b90565b61214181611e4f565b811461214c57600080fd5b50565b61215881611e61565b811461216357600080fd5b50565b61216f81611e8d565b811461217a57600080fd5b5056fea2646970667358221220e28d636231b81d985f42102bd5ba5184d8b5ec57e8751bfc247bf436e1979f1064736f6c6343000801003360806040523480156200001157600080fd5b5060405162001a5a38038062001a5a83398181016040528101906200003791906200032f565b81818160039080519060200190620000519291906200020d565b5080600490805190602001906200006a9291906200020d565b505050620000923369021e19e0c9bab24000006200009a640100000000026401000000009004565b505062000659565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200010d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200010490620003da565b60405180910390fd5b6200012a6000838362000208640100000000026401000000009004565b80600260008282546200013e919062000489565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000195919062000489565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001fc9190620003fc565b60405180910390a35050565b505050565b8280546200021b9062000526565b90600052602060002090601f0160209004810192826200023f57600085556200028b565b82601f106200025a57805160ff19168380011785556200028b565b828001600101855582156200028b579182015b828111156200028a5782518255916020019190600101906200026d565b5b5090506200029a91906200029e565b5090565b5b80821115620002b95760008160009055506001016200029f565b5090565b6000620002d4620002ce8462000442565b62000419565b905082815260208101848484011115620002ed57600080fd5b620002fa848285620004f0565b509392505050565b600082601f8301126200031457600080fd5b815162000326848260208601620002bd565b91505092915050565b600080604083850312156200034357600080fd5b600083015167ffffffffffffffff8111156200035e57600080fd5b6200036c8582860162000302565b925050602083015167ffffffffffffffff8111156200038a57600080fd5b620003988582860162000302565b9150509250929050565b6000620003b1601f8362000478565b9150620003be8262000630565b602082019050919050565b620003d481620004e6565b82525050565b60006020820190508181036000830152620003f581620003a2565b9050919050565b6000602082019050620004136000830184620003c9565b92915050565b60006200042562000438565b90506200043382826200055c565b919050565b6000604051905090565b600067ffffffffffffffff82111562000460576200045f620005f0565b5b6200046b826200061f565b9050602081019050919050565b600082825260208201905092915050565b60006200049682620004e6565b9150620004a383620004e6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004db57620004da62000592565b5b828201905092915050565b6000819050919050565b60005b8381101562000510578082015181840152602081019050620004f3565b8381111562000520576000848401525b50505050565b600060028204905060018216806200053f57607f821691505b60208210811415620005565762000555620005c1565b5b50919050565b62000567826200061f565b810181811067ffffffffffffffff82111715620005895762000588620005f0565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6113f180620006696000396000f3fe608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e578063395093511461018557806370a08231146101b557806395d89b41146101e5578063a457c2d714610203578063a9059cbb14610233578063dd62ed3e14610263576100c6565b806306fdde03146100cb578063095ea7b3146100e957806318160ddd1461011957806323b872dd14610137578063313ce56714610167575b600080fd5b6100d3610293565b6040516100e09190610e5d565b60405180910390f35b61010360048036038101906100fe9190610cab565b610325565b6040516101109190610e42565b60405180910390f35b610121610343565b60405161012e9190610f5f565b60405180910390f35b610151600480360381019061014c9190610c5c565b61034d565b60405161015e9190610e42565b60405180910390f35b61016f61044e565b60405161017c9190610f7a565b60405180910390f35b61019f600480360381019061019a9190610cab565b610457565b6040516101ac9190610e42565b60405180910390f35b6101cf60048036038101906101ca9190610bf7565b610503565b6040516101dc9190610f5f565b60405180910390f35b6101ed61054b565b6040516101fa9190610e5d565b60405180910390f35b61021d60048036038101906102189190610cab565b6105dd565b60405161022a9190610e42565b60405180910390f35b61024d60048036038101906102489190610cab565b6106d1565b60405161025a9190610e42565b60405180910390f35b61027d60048036038101906102789190610c20565b6106ef565b60405161028a9190610f5f565b60405180910390f35b6060600380546102a2906110c3565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce906110c3565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b5050505050905090565b6000610339610332610776565b848461077e565b6001905092915050565b6000600254905090565b600061035a848484610949565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103a5610776565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c90610edf565b60405180910390fd5b61044285610431610776565b858461043d9190611007565b61077e565b60019150509392505050565b60006012905090565b60006104f9610464610776565b848460016000610472610776565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104f49190610fb1565b61077e565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461055a906110c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610586906110c3565b80156105d35780601f106105a8576101008083540402835291602001916105d3565b820191906000526020600020905b8154815290600101906020018083116105b657829003601f168201915b5050505050905090565b600080600160006105ec610776565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a090610f3f565b60405180910390fd5b6106c66106b4610776565b8585846106c19190611007565b61077e565b600191505092915050565b60006106e56106de610776565b8484610949565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e590610f1f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085590610e9f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161093c9190610f5f565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b090610eff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2090610e7f565b60405180910390fd5b610a34838383610bc8565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab190610ebf565b60405180910390fd5b8181610ac69190611007565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b569190610fb1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bba9190610f5f565b60405180910390a350505050565b505050565b600081359050610bdc8161138d565b92915050565b600081359050610bf1816113a4565b92915050565b600060208284031215610c0957600080fd5b6000610c1784828501610bcd565b91505092915050565b60008060408385031215610c3357600080fd5b6000610c4185828601610bcd565b9250506020610c5285828601610bcd565b9150509250929050565b600080600060608486031215610c7157600080fd5b6000610c7f86828701610bcd565b9350506020610c9086828701610bcd565b9250506040610ca186828701610be2565b9150509250925092565b60008060408385031215610cbe57600080fd5b6000610ccc85828601610bcd565b9250506020610cdd85828601610be2565b9150509250929050565b610cf08161104d565b82525050565b6000610d0182610f95565b610d0b8185610fa0565b9350610d1b818560208601611090565b610d2481611153565b840191505092915050565b6000610d3c602383610fa0565b9150610d4782611164565b604082019050919050565b6000610d5f602283610fa0565b9150610d6a826111b3565b604082019050919050565b6000610d82602683610fa0565b9150610d8d82611202565b604082019050919050565b6000610da5602883610fa0565b9150610db082611251565b604082019050919050565b6000610dc8602583610fa0565b9150610dd3826112a0565b604082019050919050565b6000610deb602483610fa0565b9150610df6826112ef565b604082019050919050565b6000610e0e602583610fa0565b9150610e198261133e565b604082019050919050565b610e2d81611079565b82525050565b610e3c81611083565b82525050565b6000602082019050610e576000830184610ce7565b92915050565b60006020820190508181036000830152610e778184610cf6565b905092915050565b60006020820190508181036000830152610e9881610d2f565b9050919050565b60006020820190508181036000830152610eb881610d52565b9050919050565b60006020820190508181036000830152610ed881610d75565b9050919050565b60006020820190508181036000830152610ef881610d98565b9050919050565b60006020820190508181036000830152610f1881610dbb565b9050919050565b60006020820190508181036000830152610f3881610dde565b9050919050565b60006020820190508181036000830152610f5881610e01565b9050919050565b6000602082019050610f746000830184610e24565b92915050565b6000602082019050610f8f6000830184610e33565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610fbc82611079565b9150610fc783611079565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ffc57610ffb6110f5565b5b828201905092915050565b600061101282611079565b915061101d83611079565b9250828210156110305761102f6110f5565b5b828203905092915050565b600061104682611059565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156110ae578082015181840152602081019050611093565b838111156110bd576000848401525b50505050565b600060028204905060018216806110db57607f821691505b602082108114156110ef576110ee611124565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6113968161103b565b81146113a157600080fd5b50565b6113ad81611079565b81146113b857600080fd5b5056fea2646970667358221220e8473cb10c6480f17bb9fc3269f7f0fa935e29261ff17b13bae3f49d9ab6ee0364736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d1576000357c010000000000000000000000000000000000000000000000000000000090048063ca7bb3f51161008e578063ca7bb3f51461018a578063d02641a0146101a8578063d9c4c20e146101d8578063ebedb8b3146101f6578063ecb9061514610212578063f4621daf1461021c576100d1565b80631bbc4b83146100d6578063227b0510146100f45780632dc647c41461011257806351453f9d14610130578063bb02b7491461014e578063ca0b66901461016c575b600080fd5b6100de61023a565b6040516100eb9190611cc7565b60405180910390f35b6100fc610260565b6040516101099190611d3e565b60405180910390f35b61011a610266565b6040516101279190611bcb565b60405180910390f35b61013861028f565b6040516101459190611d3e565b60405180910390f35b610156610295565b6040516101639190611d3e565b60405180910390f35b6101746102df565b6040516101819190611cac565b60405180910390f35b610192610303565b60405161019f9190611c91565b60405180910390f35b6101c260048036038101906101bd9190611952565b610329565b6040516101cf9190611d3e565b60405180910390f35b6101e06103f9565b6040516101ed9190611d3e565b60405180910390f35b610210600480360381019061020b91906119a4565b6103ff565b005b61021a610936565b005b610224610c42565b6040516102319190611d22565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055481565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344a11f65836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103a29190611bcb565b60206040518083038186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f29190611a09565b9050919050565b60035481565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160149054906101000a900460ff161561048f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048690611ce2565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160159054906101000a900460ff16156105bd57600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055600282016000905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556005820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556005820160146101000a81549060ff02191690556005820160156101000a81549060ff021916905550505b61068d600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ed47d97846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106379190611bcb565b60206040518083038186803b15801561064f57600080fd5b505afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610687919061197b565b82610da4565b60405180610100016040528042815260200160008152602001828152602001600081526020018373ffffffffffffffffffffffffffffffffffffffff168152602001600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ed47d97856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107469190611bcb565b60206040518083038186803b15801561075e57600080fd5b505afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610796919061197b565b73ffffffffffffffffffffffffffffffffffffffff16815260200160011515815260200160001515815250600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff02191690831515021790555060e08201518160050160156101000a81548160ff0219169083151502179055509050507f137aa2211519a57a4d90dfe2e629ca21eb9e78f178fab57e2ea5c6e1058f4d0c338360405161092a929190611be6565b60405180910390a15050565b42600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610985610efe565b61098d61119e565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a8c929190611c46565b602060405180830381600087803b158015610aa657600080fd5b505af1158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade91906119e0565b50610ae7611371565b610aef61147f565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160156101000a81548160ff0219169083151502179055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160146101000a81548160ff0219169083151502179055507fcf89c87736de41f5ff70556801e20ae860b7146d71cedebd3df684c7dfae720533600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610c38929190611be6565b60405180910390a1565b610c4a611874565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180610100016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160149054906101000a900460ff161515151581526020016005820160159054906101000a900460ff161515151581525050905090565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dfb929190611c46565b602060405180830381600087803b158015610e1557600080fd5b505af1158015610e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4d91906119e0565b508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ea793929190611c0f565b602060405180830381600087803b158015610ec157600080fd5b505af1158015610ed5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef991906119e0565b505050565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ff9929190611c46565b602060405180830381600087803b15801561101357600080fd5b505af1158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104b91906119e0565b50600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161114993929190611c0f565b602060405180830381600087803b15801561116357600080fd5b505af1158015611177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119b91906119e0565b50565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344a11f65600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161127a9190611bcb565b60206040518083038186803b15801561129257600080fd5b505afa1580156112a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ca9190611a09565b905060006112df6112d9611615565b836116b3565b905061132d81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546116b3565b905061134181670de0b6b3a76400006116c9565b9050611351816305f5e1006116c9565b90506000611366826113616116df565b6116c9565b905080935050505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161142a929190611c46565b602060405180830381600087803b15801561144457600080fd5b505af1158015611458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147c91906119e0565b50565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541415611505576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fc90611d02565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115c093929190611c0f565b602060405180830381600087803b1580156115da57600080fd5b505af11580156115ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161291906119e0565b50565b60008061163561162e600a670de0b6b3a76400006116b3565b60646116c9565b905060006301d5560090506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154426116909190611e1b565b905060006116a76116a185846116b3565b846116c9565b90508094505050505090565b600081836116c19190611dc1565b905092915050565b600081836116d79190611d90565b905092915050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344a11f6560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117789190611bcb565b60206040518083038186803b15801561179057600080fd5b505afa9250505080156117c157506040513d601f19601f820116820180604052508101906117be9190611a09565b60015b61186c576117cd611ff4565b806308c379a014156117f757506117e26120a2565b806117ed57506117f9565b600a915050611871565b505b3d8060008114611825576040519150601f19603f3d011682016040523d82523d6000602084013e61182a565b606091505b507feaed56172f8b6b67eab86d8bb0f1fd08631a823b86f5c42cb345b2e5b289702a8160405161185a9190611c6f565b60405180910390a1600a915050611871565b809150505b90565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581525090565b6000813590506118f881612138565b92915050565b60008151905061190d81612138565b92915050565b6000815190506119228161214f565b92915050565b60008135905061193781612166565b92915050565b60008151905061194c81612166565b92915050565b60006020828403121561196457600080fd5b6000611972848285016118e9565b91505092915050565b60006020828403121561198d57600080fd5b600061199b848285016118fe565b91505092915050565b600080604083850312156119b757600080fd5b60006119c5858286016118e9565b92505060206119d685828601611928565b9150509250929050565b6000602082840312156119f257600080fd5b6000611a0084828501611913565b91505092915050565b600060208284031215611a1b57600080fd5b6000611a298482850161193d565b91505092915050565b611a3b81611e4f565b82525050565b611a4a81611e4f565b82525050565b611a5981611e61565b82525050565b6000611a6a82611d63565b611a748185611d6e565b9350611a84818560208601611f03565b611a8d81612016565b840191505092915050565b611aa181611e97565b82525050565b611ab081611ebb565b82525050565b611abf81611edf565b82525050565b6000611ad2602083611d7f565b9150611add82612050565b602082019050919050565b6000611af5601c83611d7f565b9150611b0082612079565b602082019050919050565b61010082016000820151611b226000850182611bad565b506020820151611b356020850182611bad565b506040820151611b486040850182611bad565b506060820151611b5b6060850182611bad565b506080820151611b6e6080850182611a32565b5060a0820151611b8160a0850182611a32565b5060c0820151611b9460c0850182611a50565b5060e0820151611ba760e0850182611a50565b50505050565b611bb681611e8d565b82525050565b611bc581611e8d565b82525050565b6000602082019050611be06000830184611a41565b92915050565b6000604082019050611bfb6000830185611a41565b611c086020830184611a41565b9392505050565b6000606082019050611c246000830186611a41565b611c316020830185611a41565b611c3e6040830184611bbc565b949350505050565b6000604082019050611c5b6000830185611a41565b611c686020830184611bbc565b9392505050565b60006020820190508181036000830152611c898184611a5f565b905092915050565b6000602082019050611ca66000830184611a98565b92915050565b6000602082019050611cc16000830184611aa7565b92915050565b6000602082019050611cdc6000830184611ab6565b92915050565b60006020820190508181036000830152611cfb81611ac5565b9050919050565b60006020820190508181036000830152611d1b81611ae8565b9050919050565b600061010082019050611d386000830184611b0b565b92915050565b6000602082019050611d536000830184611bbc565b92915050565b6000604051905090565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611d9b82611e8d565b9150611da683611e8d565b925082611db657611db5611f96565b5b828204905092915050565b6000611dcc82611e8d565b9150611dd783611e8d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e1057611e0f611f67565b5b828202905092915050565b6000611e2682611e8d565b9150611e3183611e8d565b925082821015611e4457611e43611f67565b5b828203905092915050565b6000611e5a82611e6d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ea282611ea9565b9050919050565b6000611eb482611e6d565b9050919050565b6000611ec682611ecd565b9050919050565b6000611ed882611e6d565b9050919050565b6000611eea82611ef1565b9050919050565b6000611efc82611e6d565b9050919050565b60005b83811015611f21578082015181840152602081019050611f06565b83811115611f30576000848401525b50505050565b611f3f82612016565b810181811067ffffffffffffffff82111715611f5e57611f5d611fc5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156120135760046000803e612010600051612027565b90505b90565b6000601f19601f8301169050919050565b60007c010000000000000000000000000000000000000000000000000000000082049050919050565b7f596f75206861766520616c7265616479207374616b65206f6e6520746f6b656e600082015250565b7f526577617264206973206e6f74207965742063616c63756c6174656400000000600082015250565b600060443d10156120b257612135565b6120ba611d59565b60043d036004823e80513d602482011167ffffffffffffffff821117156120e2575050612135565b808201805167ffffffffffffffff8111156121005750505050612135565b80602083010160043d03850181111561211d575050505050612135565b61212c82602001850186611f36565b82955050505050505b90565b61214181611e4f565b811461214c57600080fd5b50565b61215881611e61565b811461216357600080fd5b50565b61216f81611e8d565b811461217a57600080fd5b5056fea2646970667358221220e28d636231b81d985f42102bd5ba5184d8b5ec57e8751bfc247bf436e1979f1064736f6c63430008010033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2778:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:11",
                "type": ""
              }
            ],
            "src": "7:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:207:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "305:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "320:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "324:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "349:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "395:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "391:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "359:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "349:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:11",
                "type": ""
              }
            ],
            "src": "156:284:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "592:219:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "602:73:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "668:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "673:1:11",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "609:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "609:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "602:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "773:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1",
                      "nodeType": "YulIdentifier",
                      "src": "684:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "684:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "786:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "797:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "802:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "786:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "580:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "588:3:11",
                "type": ""
              }
            ],
            "src": "446:365:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "963:219:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "973:73:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1039:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1044:1:11",
                        "type": "",
                        "value": "8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "980:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "973:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1144:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10",
                      "nodeType": "YulIdentifier",
                      "src": "1055:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1055:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1055:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1157:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1168:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1173:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1164:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1164:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1157:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "951:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "959:3:11",
                "type": ""
              }
            ],
            "src": "817:365:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1460:454:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1470:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1482:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1493:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1478:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1478:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1470:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1517:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1528:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1513:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1513:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1536:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1542:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1532:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1532:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1506:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1506:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1506:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1562:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1696:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1570:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1570:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1562:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1722:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1733:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1718:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1718:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1742:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1748:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1738:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1738:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1711:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1711:48:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1768:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1902:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1776:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1776:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1768:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10_t_stringliteral_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1440:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1455:4:11",
                "type": ""
              }
            ],
            "src": "1188:726:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2016:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2033:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2038:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2026:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2026:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2026:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2054:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2073:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2078:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2069:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2069:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2054:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1988:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1993:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2004:11:11",
                "type": ""
              }
            ],
            "src": "1920:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2140:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2150:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2179:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2161:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2161:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2150:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2122:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2132:7:11",
                "type": ""
              }
            ],
            "src": "2095:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2242:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2252:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2267:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2274:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2263:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2263:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2252:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2224:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2234:7:11",
                "type": ""
              }
            ],
            "src": "2197:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2435:48:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2457:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2465:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2453:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2453:14:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2469:6:11",
                        "type": "",
                        "value": "ANTC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2446:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2446:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2446:30:11"
                }
              ]
            },
            "name": "store_literal_in_memory_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2427:6:11",
                "type": ""
              }
            ],
            "src": "2329:154:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2595:52:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2617:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2625:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2613:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2613:14:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2629:10:11",
                        "type": "",
                        "value": "ANTMONEY"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2606:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2606:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2606:34:11"
                }
              ]
            },
            "name": "store_literal_in_memory_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2587:6:11",
                "type": ""
              }
            ],
            "src": "2489:158:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2696:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2753:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2762:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2765:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2755:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2755:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2755:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2719:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2744:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2726:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2726:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2716:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2716:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2709:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2709:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2706:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2689:5:11",
                "type": ""
              }
            ],
            "src": "2653:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10_t_stringliteral_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10_to_t_string_memory_ptr_fromStack( tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function store_literal_in_memory_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1(memPtr) {\n\n        mstore(add(memPtr, 0), \"ANTC\")\n\n    }\n\n    function store_literal_in_memory_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10(memPtr) {\n\n        mstore(add(memPtr, 0), \"ANTMONEY\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15797:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:11",
                "type": ""
              }
            ],
            "src": "7:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "215:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "225:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "240:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "234:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "234:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "225:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "283:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "256:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "256:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "193:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "201:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "209:5:11",
                "type": ""
              }
            ],
            "src": "152:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "361:77:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "371:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "386:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "380:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "380:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "371:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "426:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "402:23:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "402:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "402:30:11"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "339:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "347:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "355:5:11",
                "type": ""
              }
            ],
            "src": "301:137:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "496:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "506:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "528:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "515:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "515:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "506:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "571:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "544:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "544:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "474:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "482:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "490:5:11",
                "type": ""
              }
            ],
            "src": "444:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "652:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "662:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "677:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "671:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "671:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "662:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "720:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "693:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "693:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "693:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "630:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "638:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "646:5:11",
                "type": ""
              }
            ],
            "src": "589:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "804:196:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "850:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "859:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "862:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "852:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "852:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "852:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "825:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "834:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "821:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "821:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "846:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "817:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "814:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "876:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "891:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "905:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "895:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "920:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "955:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "966:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "951:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "951:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "975:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "930:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "930:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "920:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "774:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "785:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "797:6:11",
                "type": ""
              }
            ],
            "src": "738:262:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1083:207:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1129:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1138:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1141:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1131:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1131:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1131:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1104:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1113:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1100:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1125:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1096:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1096:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1093:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1155:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1170:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1184:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1174:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1199:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1245:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1256:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1241:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1241:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1265:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1209:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1209:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1199:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1053:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1064:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1076:6:11",
                "type": ""
              }
            ],
            "src": "1006:284:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1379:324:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1425:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1434:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1437:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1427:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1427:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1427:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1400:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1409:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1396:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1396:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1421:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1392:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1389:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1451:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1466:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1480:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1470:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1495:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1530:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1541:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1526:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1526:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1550:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1505:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1505:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1495:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1578:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1593:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1607:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1597:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1623:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1658:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1669:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1654:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1654:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1678:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1633:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1633:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1623:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1341:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1352:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1364:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1372:6:11",
                "type": ""
              }
            ],
            "src": "1296:407:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1783:204:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1829:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1838:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1841:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1831:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1831:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1831:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1804:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1813:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1800:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1800:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1825:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1796:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1796:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1793:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1855:125:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1870:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1884:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1874:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1899:71:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1942:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1953:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1938:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1938:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1962:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1909:28:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1909:61:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1899:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1753:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1764:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1776:6:11",
                "type": ""
              }
            ],
            "src": "1709:278:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2070:207:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2116:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2125:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2128:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2118:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2118:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2118:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2091:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2100:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2087:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2087:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2112:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2083:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2083:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2080:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2142:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2157:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2171:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2161:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2186:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2232:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2243:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2228:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2228:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2252:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2196:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2196:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2186:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2040:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2051:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2063:6:11",
                "type": ""
              }
            ],
            "src": "1993:284:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2338:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2355:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2378:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2360:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2360:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2348:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2348:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2326:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2333:3:11",
                "type": ""
              }
            ],
            "src": "2283:108:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2462:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2479:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2502:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2484:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2484:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2472:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2472:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2450:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2457:3:11",
                "type": ""
              }
            ],
            "src": "2397:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2570:50:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2587:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2607:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2592:14:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2592:21:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2580:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2580:34:11"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2558:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2565:3:11",
                "type": ""
              }
            ],
            "src": "2521:99:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2716:270:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2726:52:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2772:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2740:31:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:38:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2730:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2787:77:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2852:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2857:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2794:57:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2794:70:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2787:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2899:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2906:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2895:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2895:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2913:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2918:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2873:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2873:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2873:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2934:46:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2945:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2972:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2950:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2950:29:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2941:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2941:39:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2934:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2697:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2704:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2712:3:11",
                "type": ""
              }
            ],
            "src": "2626:360:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3088:97:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3105:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3172:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3110:61:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3110:68:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3098:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3098:81:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3098:81:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3076:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3083:3:11",
                "type": ""
              }
            ],
            "src": "2992:193:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3278:88:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3295:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3353:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20Chainlink_$311_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3300:52:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3300:59:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3288:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3288:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3288:72:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20Chainlink_$311_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3266:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3273:3:11",
                "type": ""
              }
            ],
            "src": "3191:175:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3452:81:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3469:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3520:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$1549_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3474:45:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3474:52:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3462:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3462:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3462:65:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$1549_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3440:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3447:3:11",
                "type": ""
              }
            ],
            "src": "3372:161:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3685:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3695:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3761:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3766:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3702:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3702:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3695:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3867:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f",
                      "nodeType": "YulIdentifier",
                      "src": "3778:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3778:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3778:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3880:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3891:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3896:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3887:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3887:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3880:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3673:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3681:3:11",
                "type": ""
              }
            ],
            "src": "3539:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4057:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4067:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4133:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4138:2:11",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4074:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4074:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4067:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4239:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1",
                      "nodeType": "YulIdentifier",
                      "src": "4150:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4150:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4150:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4252:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4263:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4268:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4259:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4259:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4252:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4045:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4053:3:11",
                "type": ""
              }
            ],
            "src": "3911:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4449:1484:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4459:28:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4475:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4480:6:11",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4471:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4471:16:11"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "4463:4:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4497:172:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4540:43:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4570:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4577:4:11",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4566:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4566:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4560:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4560:23:11"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4544:12:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4630:12:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4648:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4653:4:11",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4644:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4644:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4596:33:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4596:63:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4596:63:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4679:171:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4721:43:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4751:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4758:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4747:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4747:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4741:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4741:23:11"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4725:12:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4811:12:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4829:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4834:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4825:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4825:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4777:33:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4777:63:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4777:63:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4860:166:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4897:43:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4927:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4934:4:11",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4923:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4923:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4917:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4917:23:11"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4901:12:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4987:12:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5005:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5010:4:11",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5001:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5001:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4953:33:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4953:63:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4953:63:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5036:172:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5079:43:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5109:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5116:4:11",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5105:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5105:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5099:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5099:23:11"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5083:12:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5169:12:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5187:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5192:4:11",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5183:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5183:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5135:33:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5135:63:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5135:63:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5218:176:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5265:43:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5295:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5302:4:11",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5291:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5291:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5285:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5285:23:11"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5269:12:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5355:12:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5373:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5378:4:11",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5369:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5369:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5321:33:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5321:63:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5321:63:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5404:177:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5452:43:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5482:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5489:4:11",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5478:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5478:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5472:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5472:23:11"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5456:12:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5542:12:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5560:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5565:4:11",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5556:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5556:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5508:33:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5508:63:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5508:63:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5591:163:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5631:43:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5661:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5668:4:11",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5657:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5657:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5651:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5651:23:11"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5635:12:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5715:12:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5733:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5738:4:11",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5729:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5729:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5687:27:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5687:57:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5687:57:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5764:162:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5803:43:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5833:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5840:4:11",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5829:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5829:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5823:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5823:23:11"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5807:12:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5887:12:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5905:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5910:4:11",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5901:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5901:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5859:27:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5859:57:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5859:57:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_staker_$440_memory_ptr_to_t_struct$_staker_$440_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4436:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4443:3:11",
                "type": ""
              }
            ],
            "src": "4337:1596:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5994:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6011:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6034:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6016:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6016:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6004:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6004:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6004:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5982:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5989:3:11",
                "type": ""
              }
            ],
            "src": "5939:108:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6118:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6135:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6158:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6140:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6140:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6128:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6128:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6128:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6106:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6113:3:11",
                "type": ""
              }
            ],
            "src": "6053:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6275:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6285:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6297:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6308:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6293:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6293:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6285:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6365:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6378:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6389:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6374:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6374:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6321:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6321:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6321:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6247:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6259:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6270:4:11",
                "type": ""
              }
            ],
            "src": "6177:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6531:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6541:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6553:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6564:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6549:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6541:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6621:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6634:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6645:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6630:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6630:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6577:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6577:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6577:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6702:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6715:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6726:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6711:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6711:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6658:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6658:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6495:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6507:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6515:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6526:4:11",
                "type": ""
              }
            ],
            "src": "6405:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6897:288:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6907:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6919:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6930:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6915:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6915:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6907:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6987:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7000:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7011:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6996:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6996:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6943:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6943:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6943:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7068:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7081:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7092:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7077:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7077:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7024:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7024:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7024:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7150:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7163:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7174:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7159:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7159:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7106:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7106:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7106:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6853:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6865:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6873:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6881:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6892:4:11",
                "type": ""
              }
            ],
            "src": "6743:442:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7317:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7327:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7339:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7350:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7335:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7335:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7327:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7407:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7420:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7431:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7416:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7416:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7363:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7363:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7363:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7488:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7501:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7512:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7497:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7497:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7444:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7444:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7444:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7281:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7293:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7301:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7312:4:11",
                "type": ""
              }
            ],
            "src": "7191:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7645:193:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7655:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7667:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7678:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7663:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7663:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7655:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7702:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7713:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7698:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7698:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7721:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7727:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7717:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7717:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7691:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7691:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7691:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7747:84:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7817:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7826:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7755:61:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7755:76:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7747:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7617:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7629:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7640:4:11",
                "type": ""
              }
            ],
            "src": "7529:309:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7973:155:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7983:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7995:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8006:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7991:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7991:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7983:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8094:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8107:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8118:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8103:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8103:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8019:74:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8019:102:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8019:102:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_CrowdsaleERC20Chainlink_$287__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7945:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7957:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7968:4:11",
                "type": ""
              }
            ],
            "src": "7844:284:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8254:146:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8264:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8276:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8287:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8272:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8272:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8264:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8366:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8379:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8390:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8375:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8375:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20Chainlink_$311_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8300:65:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8300:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8300:93:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20Chainlink_$311__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8226:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8238:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8249:4:11",
                "type": ""
              }
            ],
            "src": "8134:266:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8519:139:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8529:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8541:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8552:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8537:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8537:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8529:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8624:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8637:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8648:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8633:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8633:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1549_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8565:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8565:86:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8565:86:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1549__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8491:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8503:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8514:4:11",
                "type": ""
              }
            ],
            "src": "8406:252:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8835:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8845:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8857:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8868:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8853:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8853:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8845:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8892:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8903:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8888:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8888:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8911:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8917:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8907:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8907:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8881:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8881:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8881:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8937:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9071:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8945:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8945:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8937:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8815:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8830:4:11",
                "type": ""
              }
            ],
            "src": "8664:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9260:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9270:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9282:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9293:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9278:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9278:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9270:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9317:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9328:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9313:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9313:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9336:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9342:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9332:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9332:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9306:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9306:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9306:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9362:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9496:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9370:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9370:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9362:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9240:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9255:4:11",
                "type": ""
              }
            ],
            "src": "9089:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9658:171:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9668:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9680:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9691:3:11",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9676:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9676:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9668:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9795:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9808:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9819:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9804:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9804:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_staker_$440_memory_ptr_to_t_struct$_staker_$440_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9705:89:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9705:117:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9705:117:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_staker_$440_memory_ptr__to_t_struct$_staker_$440_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9630:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9642:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9653:4:11",
                "type": ""
              }
            ],
            "src": "9514:315:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9933:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9943:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9955:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9966:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9951:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9951:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9943:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10023:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10036:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10047:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10032:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10032:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9979:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9979:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9979:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9905:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9917:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9928:4:11",
                "type": ""
              }
            ],
            "src": "9835:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10103:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10113:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10129:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10123:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10123:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "10113:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10096:6:11",
                "type": ""
              }
            ],
            "src": "10063:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10202:40:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10213:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10229:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10223:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10223:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "10213:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10185:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10195:6:11",
                "type": ""
              }
            ],
            "src": "10144:98:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10343:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10360:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10365:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10353:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10353:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10353:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10381:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10400:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10405:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10396:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10396:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10381:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10315:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10320:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10331:11:11",
                "type": ""
              }
            ],
            "src": "10248:168:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10518:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10535:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10540:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10528:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10528:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10528:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10556:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10575:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10580:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10571:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10571:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10556:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10490:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10495:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10506:11:11",
                "type": ""
              }
            ],
            "src": "10422:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10639:143:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10649:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10672:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10654:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10654:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10649:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10683:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10706:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10688:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10688:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10683:1:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10730:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "10732:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10732:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10732:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10727:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10720:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10720:9:11"
                  },
                  "nodeType": "YulIf",
                  "src": "10717:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10762:14:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10771:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10774:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10767:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10767:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10762:1:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10628:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10631:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10637:1:11",
                "type": ""
              }
            ],
            "src": "10597:185:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10836:300:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10846:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10869:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10851:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10851:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10846:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10880:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10903:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10885:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10885:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10880:1:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11078:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11080:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11080:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11080:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10990:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10983:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10983:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10976:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10976:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10998:1:11"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11005:66:11",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11073:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11001:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11001:74:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10995:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10995:81:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10972:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10972:105:11"
                  },
                  "nodeType": "YulIf",
                  "src": "10969:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11110:20:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11125:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11128:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11121:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11121:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "11110:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10819:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10822:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10828:7:11",
                "type": ""
              }
            ],
            "src": "10788:348:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11187:146:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11197:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11220:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11202:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11202:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11197:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11231:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11254:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11236:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11236:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11231:1:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11278:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11280:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11280:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11280:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11272:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11275:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11269:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11269:8:11"
                  },
                  "nodeType": "YulIf",
                  "src": "11266:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11310:17:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11322:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11325:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11318:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11318:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11310:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11173:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11176:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11182:4:11",
                "type": ""
              }
            ],
            "src": "11142:191:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11384:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11394:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11423:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11405:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11405:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11394:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11366:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11376:7:11",
                "type": ""
              }
            ],
            "src": "11339:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11483:48:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11493:32:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11518:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11511:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11511:13:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11504:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11504:21:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11493:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11465:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11475:7:11",
                "type": ""
              }
            ],
            "src": "11441:90:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11582:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11592:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11607:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11614:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11603:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11603:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11592:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11564:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11574:7:11",
                "type": ""
              }
            ],
            "src": "11537:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11714:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11724:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11735:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11724:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11696:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11706:7:11",
                "type": ""
              }
            ],
            "src": "11669:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11843:97:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11853:81:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11928:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11866:61:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11866:68:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11853:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11823:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11833:9:11",
                "type": ""
              }
            ],
            "src": "11752:188:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12037:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12047:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12078:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12060:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12060:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12047:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12017:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12027:9:11",
                "type": ""
              }
            ],
            "src": "11946:144:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12178:88:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12188:72:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12254:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ERC20Chainlink_$311_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12201:52:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12201:59:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12188:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20Chainlink_$311_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12158:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12168:9:11",
                "type": ""
              }
            ],
            "src": "12096:170:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12354:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12364:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12395:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12377:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12377:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12364:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20Chainlink_$311_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12334:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12344:9:11",
                "type": ""
              }
            ],
            "src": "12272:135:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12488:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12498:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12557:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$1549_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12511:45:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12511:52:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12498:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1549_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12468:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12478:9:11",
                "type": ""
              }
            ],
            "src": "12413:156:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12650:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12660:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12691:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12673:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12673:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12660:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1549_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12630:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12640:9:11",
                "type": ""
              }
            ],
            "src": "12575:128:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12758:258:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12768:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12777:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "12772:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12837:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12862:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12867:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12858:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12858:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "12881:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12886:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12877:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12877:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12871:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12871:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12851:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12851:39:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12851:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12798:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12801:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12795:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12795:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12809:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12811:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12820:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12823:2:11",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12816:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12816:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12811:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12791:3:11",
                    "statements": []
                  },
                  "src": "12787:113:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12934:76:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12984:3:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12989:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12980:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12980:16:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12998:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12973:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12973:27:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12973:27:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12915:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12918:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12912:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12912:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "12909:2:11"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "12740:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "12745:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12750:6:11",
                "type": ""
              }
            ],
            "src": "12709:307:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13065:238:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13075:58:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "13097:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "13127:4:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "13105:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13105:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13093:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13093:40:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "13079:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13244:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "13246:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13246:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13246:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "13187:10:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13199:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13184:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13184:34:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "13223:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13235:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "13220:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13220:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "13181:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13181:62:11"
                  },
                  "nodeType": "YulIf",
                  "src": "13178:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13282:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "13286:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13275:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13275:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13275:22:11"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13051:6:11",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "13059:4:11",
                "type": ""
              }
            ],
            "src": "13022:281:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13337:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13354:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13357:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13347:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13347:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13347:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13451:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13454:4:11",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13444:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13444:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13444:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13475:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13478:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13468:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13468:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13468:15:11"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13309:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13523:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13540:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13543:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13533:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13533:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13533:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13637:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13640:4:11",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13630:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13630:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13630:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13661:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13664:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13654:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13654:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13654:15:11"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "13495:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13709:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13726:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13729:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13719:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13719:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13719:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13823:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13826:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13816:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13816:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13816:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13847:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13850:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13840:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13840:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13840:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "13681:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13906:144:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13943:101:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13972:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13975:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13978:1:11",
                              "type": "",
                              "value": "4"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13957:14:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13957:23:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13957:23:11"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13993:41:11",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14031:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "14025:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14025:8:11"
                            }
                          ],
                          "functionName": {
                            "name": "shift_right_224_unsigned",
                            "nodeType": "YulIdentifier",
                            "src": "14000:24:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14000:34:11"
                        },
                        "variableNames": [
                          {
                            "name": "sig",
                            "nodeType": "YulIdentifier",
                            "src": "13993:3:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "functionName": {
                          "name": "returndatasize",
                          "nodeType": "YulIdentifier",
                          "src": "13922:14:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13922:16:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13940:1:11",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13919:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13919:23:11"
                  },
                  "nodeType": "YulIf",
                  "src": "13916:2:11"
                }
              ]
            },
            "name": "return_data_selector",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "sig",
                "nodeType": "YulTypedName",
                "src": "13902:3:11",
                "type": ""
              }
            ],
            "src": "13867:183:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14104:54:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14114:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14132:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14139:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14128:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14128:14:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14148:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14144:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14144:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14124:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14124:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "14114:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14087:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "14097:6:11",
                "type": ""
              }
            ],
            "src": "14056:102:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14217:110:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14227:93:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14252:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14259:60:11",
                        "type": "",
                        "value": "0x0100000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14248:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14248:72:11"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "14227:8:11"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_224_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14198:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "14208:8:11",
                "type": ""
              }
            ],
            "src": "14164:163:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14439:76:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14461:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14469:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14457:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14457:14:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14473:34:11",
                        "type": "",
                        "value": "You have already stake one token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14450:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14450:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14450:58:11"
                }
              ]
            },
            "name": "store_literal_in_memory_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14431:6:11",
                "type": ""
              }
            ],
            "src": "14333:182:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14627:72:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14649:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14657:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14645:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14645:14:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14661:30:11",
                        "type": "",
                        "value": "Reward is not yet calculated"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14638:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14638:54:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14638:54:11"
                }
              ]
            },
            "name": "store_literal_in_memory_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14619:6:11",
                "type": ""
              }
            ],
            "src": "14521:178:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14748:668:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14788:9:11",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "14790:5:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "functionName": {
                          "name": "returndatasize",
                          "nodeType": "YulIdentifier",
                          "src": "14764:14:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14764:16:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14782:4:11",
                        "type": "",
                        "value": "0x44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14761:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14761:26:11"
                  },
                  "nodeType": "YulIf",
                  "src": "14758:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14807:32:11",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "14819:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14819:20:11"
                  },
                  "variables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "14811:4:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14863:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14869:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "14876:14:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14876:16:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14894:1:11",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14872:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14872:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "14848:14:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14848:49:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14848:49:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14907:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14927:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14921:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14921:11:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "14911:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15058:29:11",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "15072:5:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "14963:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14971:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14960:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14960:30:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "15011:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15019:4:11",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15007:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15007:17:11"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "15026:14:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15026:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "15004:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15004:39:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "14944:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14944:113:11"
                  },
                  "nodeType": "YulIf",
                  "src": "14941:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15097:28:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "15112:4:11"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "15118:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15108:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15108:17:11"
                  },
                  "variables": [
                    {
                      "name": "msg",
                      "nodeType": "YulTypedName",
                      "src": "15101:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15134:24:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "msg",
                        "nodeType": "YulIdentifier",
                        "src": "15154:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15148:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15148:10:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "15138:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15201:9:11",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "15203:5:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15173:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15181:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15170:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15170:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "15167:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15220:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "msg",
                            "nodeType": "YulIdentifier",
                            "src": "15239:3:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15244:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15235:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15235:14:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15251:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15231:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15231:27:11"
                  },
                  "variables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "15224:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15315:9:11",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "15317:5:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "15273:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "15282:4:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "15292:14:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15292:16:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15310:1:11",
                                "type": "",
                                "value": "4"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "15288:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15288:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15278:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15278:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15270:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15270:44:11"
                  },
                  "nodeType": "YulIf",
                  "src": "15267:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "15354:4:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "15364:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15376:4:11",
                                "type": "",
                                "value": "0x20"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "15382:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15372:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15372:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15360:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15360:30:11"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "15334:19:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15334:57:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15334:57:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15400:10:11",
                  "value": {
                    "name": "msg",
                    "nodeType": "YulIdentifier",
                    "src": "15407:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "15400:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "try_decode_error_message",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14744:3:11",
                "type": ""
              }
            ],
            "src": "14705:711:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15465:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15522:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15531:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15534:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15524:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15524:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15524:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15488:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15513:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "15495:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15495:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15485:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15485:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15478:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15478:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "15475:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15458:5:11",
                "type": ""
              }
            ],
            "src": "15422:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15590:76:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15644:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15653:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15656:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15646:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15646:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15646:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15613:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15635:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "15620:14:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15620:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15610:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15610:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15603:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15603:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "15600:2:11"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15583:5:11",
                "type": ""
              }
            ],
            "src": "15550:116:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15715:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15772:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15781:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15784:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15774:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15774:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15774:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15738:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15763:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "15745:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15745:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15735:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15735:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15728:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15728:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "15725:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15708:5:11",
                "type": ""
              }
            ],
            "src": "15672:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ERC20Chainlink_$311_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20Chainlink_$311_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$1549_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1549_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1(pos)\n        end := add(pos, 32)\n    }\n\n    // struct Staking.staker -> struct Staking.staker\n    function abi_encode_t_struct$_staker_$440_memory_ptr_to_t_struct$_staker_$440_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // startStaking\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stopStaking\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amountReward\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // chainlinkAddress\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tokenERC20Address\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // isStaking\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // unstaked\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_CrowdsaleERC20Chainlink_$287__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20Chainlink_$311__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20Chainlink_$311_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1549__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1549_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_staker_$440_memory_ptr__to_t_struct$_staker_$440_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_staker_$440_memory_ptr_to_t_struct$_staker_$440_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_address(value) -> converted {\n        converted := convert_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CrowdsaleERC20Chainlink_$287_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20Chainlink_$311_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ERC20Chainlink_$311_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20Chainlink_$311_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1549_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$1549_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1549_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        div(value, 0x0100000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have already stake one token\")\n\n    }\n\n    function store_literal_in_memory_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward is not yet calculated\")\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "241:5777:4:-:0;;;272:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;334:38;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;322:9;;:50;;;;;;;;;;;;;;;;;;413:12;381:5;;:45;;;;;;;;;;;;;;;;;;272:162;241:5777;;;;;;;;;;:::o;7:143:11:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:365::-;;609:66;673:1;668:3;609:66;:::i;:::-;602:73;;684:93;773:3;684:93;:::i;:::-;802:2;797:3;793:12;786:19;;592:219;;;:::o;817:365::-;;980:66;1044:1;1039:3;980:66;:::i;:::-;973:73;;1055:93;1144:3;1055:93;:::i;:::-;1173:2;1168:3;1164:12;1157:19;;963:219;;;:::o;1188:726::-;;1493:2;1482:9;1478:18;1470:26;;1542:9;1536:4;1532:20;1528:1;1517:9;1513:17;1506:47;1570:131;1696:4;1570:131;:::i;:::-;1562:139;;1748:9;1742:4;1738:20;1733:2;1722:9;1718:18;1711:48;1776:131;1902:4;1776:131;:::i;:::-;1768:139;;1460:454;;;:::o;1920:169::-;;2038:6;2033:3;2026:19;2078:4;2073:3;2069:14;2054:29;;2016:73;;;;:::o;2095:96::-;;2161:24;2179:5;2161:24;:::i;:::-;2150:35;;2140:51;;;:::o;2197:126::-;;2274:42;2267:5;2263:54;2252:65;;2242:81;;;:::o;2329:154::-;2469:6;2465:1;2457:6;2453:14;2446:30;2435:48;:::o;2489:158::-;2629:10;2625:1;2617:6;2613:14;2606:34;2595:52;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:2;;2765:1;2762;2755:12;2706:2;2696:79;:::o;241:5777:4:-;;;;;;;",
  "deployedSourceMap": "241:5777:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;534:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;602:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2960:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;632:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3264:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;449:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;662:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3076:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;569:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1383:608;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2110:490;;;:::i;:::-;;3391:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;534:28;;;;;;;;;;;;;:::o;602:23::-;;;;:::o;2960:104::-;3013:7;3046:9;;;;;;;;;;;3031:25;;2960:104;:::o;632:23::-;;;;:::o;3264:115::-;3316:4;3339:7;:19;3347:10;3339:19;;;;;;;;;;;;;;;:32;;;3332:39;;3264:115;:::o;449:31::-;;;;;;;;;;;;:::o;662:36::-;;;;;;;;;;;;;:::o;3076:135::-;3145:4;3168:5;;;;;;;;;;;:17;;;3186:16;3168:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3161:42;;3076:135;;;:::o;569:26::-;;;;:::o;1383:608::-;1532:7;:19;1540:10;1532:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;1531:30;1523:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1622:7;:19;1630:10;1622:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1619:86;;;1673:7;:19;1681:10;1673:19;;;;;;;;;;;;;;;;1666:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1619:86;1725:64;1741:5;;;;;;;;;;;:21;;;1763:16;1741:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1782:6;1725:15;:64::i;:::-;1822:105;;;;;;;;1829:15;1822:105;;;;1845:1;1822:105;;;;1847:6;1822:105;;;;1855:1;1822:105;;;;1858:16;1822:105;;;;;;1875:5;;;;;;;;;;;:21;;;1897:16;1875:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1822:105;;;;;;1915:4;1822:105;;;;;;1921:5;1822:105;;;;;1800:7;:19;1808:10;1800:19;;;;;;;;;;;;;;;:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1943:40;1954:10;1966:16;1943:40;;;;;;;:::i;:::-;;;;;;;;1383:608;;:::o;2110:490::-;2193:15;2159:7;:19;2167:10;2159:19;;;;;;;;;;;;;;;:31;;:49;;;;2219:14;:12;:14::i;:::-;2279:15;:13;:15::i;:::-;2244:7;:19;2252:10;2244:19;;;;;;;;;;;;;;;:32;;:50;;;;2305:9;;;;;;;;;;:17;;;2323:10;2335:7;:19;2343:10;2335:19;;;;;;;;;;;;;;;:32;;;2305:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2379:17;:15;:17::i;:::-;2407:13;:11;:13::i;:::-;2462:4;2431:7;:19;2439:10;2431:19;;;;;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;2509:5;2477:7;:19;2485:10;2477:19;;;;;;;;;;;;;;;:29;;;:37;;;;;;;;;;;;;;;;;;2530:62;2543:10;2555:7;:19;2563:10;2555:19;;;;;;;;;;;;;;;:36;;;;;;;;;;;;2530:62;;;;;;;:::i;:::-;;;;;;;;2110:490::o;3391:103::-;3434:13;;:::i;:::-;3467:7;:19;3475:10;3467:19;;;;;;;;;;;;;;;3460:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3391:103;:::o;3552:236::-;3650:12;3635:36;;;3680:4;3687:6;3635:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3720:12;3705:41;;;3747:10;3766:4;3773:6;3705:75;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3552:236;;:::o;3851:271::-;3903:7;:19;3911:10;3903:19;;;;;;;;;;;;;;;:37;;;;;;;;;;;;3897:52;;;3950:10;3962:7;:19;3970:10;3962:19;;;;;;;;;;;;;;;:26;;;3897:92;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4006:7;:19;4014:10;4006:19;;;;;;;;;;;;;;;:37;;;;;;;;;;;;4000:57;;;4066:4;4073:10;4085:7;:19;4093:10;4085:19;;;;;;;;;;;;;;;:26;;;4000:112;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3851:271::o;4134:632::-;4176:4;4268:21;4292:5;;;;;;;;;;;:17;;;4310:7;:19;4318:10;4310:19;;;;;;;;;;;;;;;:36;;;;;;;;;;;;4292:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4268:79;;4415:14;4432:44;4445:15;:13;:15::i;:::-;4462:13;4432:12;:44::i;:::-;4415:61;;4499:51;4512:9;4523:7;:19;4531:10;4523:19;;;;;;;;;;;;;;;:26;;;4499:12;:51::i;:::-;4487:63;;4573:29;4586:9;4597:4;4573:12;:29::i;:::-;4561:41;;4625:28;4638:9;4649:3;4625:12;:28::i;:::-;4613:40;;4664:16;4683:46;4696:9;4707:21;:19;:21::i;:::-;4683:12;:46::i;:::-;4664:65;;4747:11;4740:18;;;;;4134:632;:::o;2803:145::-;2872:9;;;;;;;;;;2849:42;;;2900:4;2907:7;:19;2915:10;2907:19;;;;;;;;;;;;;;;:32;;;2849:91;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2803:145::o;4834:223::-;4921:1;4885:7;:19;4893:10;4885:19;;;;;;;;;;;;;;;:32;;;:37;;4877:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;4966:9;;;;;;;;;;:22;;;4997:4;5004:10;5016:7;:19;5024:10;5016:19;;;;;;;;;;;;;;;:32;;;4966:83;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4834:223::o;5069:403::-;5116:4;5162:8;5173:41;5186:22;5199:2;5203:4;5186:12;:22::i;:::-;5210:3;5173:12;:41::i;:::-;5162:52;;5225:21;5249:8;5225:32;;5268:16;5305:7;:19;5313:10;5305:19;;;;;;;;;;;;;;;:32;;;5287:15;:50;;;;:::i;:::-;5268:69;;5348:19;5370:62;5383:30;5396:3;5401:11;5383:12;:30::i;:::-;5415:16;5370:12;:62::i;:::-;5348:84;;5450:14;5443:21;;;;;;5069:403;:::o;3382:96:10:-;3440:7;3470:1;3466;:5;;;;:::i;:::-;3459:12;;3382:96;;;;:::o;3767:::-;3825:7;3855:1;3851;:5;;;;:::i;:::-;3844:12;;3767:96;;;;:::o;5631:348:4:-;5679:4;5699:5;;;;;;;;;;;:17;;;5725:9;;;;;;;;;;5699:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5695:277;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5848:2;5841:9;;;;;5695:277;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5912:24;5929:6;5912:24;;;;;;:::i;:::-;;;;;;;;5958:2;5951:9;;;;;5695:277;5776:3;5769:10;;;5631:348;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:11:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:137::-;;386:6;380:13;371:22;;402:30;426:5;402:30;:::i;:::-;361:77;;;;:::o;444:139::-;;528:6;515:20;506:29;;544:33;571:5;544:33;:::i;:::-;496:87;;;;:::o;589:143::-;;677:6;671:13;662:22;;693:33;720:5;693:33;:::i;:::-;652:80;;;;:::o;738:262::-;;846:2;834:9;825:7;821:23;817:32;814:2;;;862:1;859;852:12;814:2;905:1;930:53;975:7;966:6;955:9;951:22;930:53;:::i;:::-;920:63;;876:117;804:196;;;;:::o;1006:284::-;;1125:2;1113:9;1104:7;1100:23;1096:32;1093:2;;;1141:1;1138;1131:12;1093:2;1184:1;1209:64;1265:7;1256:6;1245:9;1241:22;1209:64;:::i;:::-;1199:74;;1155:128;1083:207;;;;:::o;1296:407::-;;;1421:2;1409:9;1400:7;1396:23;1392:32;1389:2;;;1437:1;1434;1427:12;1389:2;1480:1;1505:53;1550:7;1541:6;1530:9;1526:22;1505:53;:::i;:::-;1495:63;;1451:117;1607:2;1633:53;1678:7;1669:6;1658:9;1654:22;1633:53;:::i;:::-;1623:63;;1578:118;1379:324;;;;;:::o;1709:278::-;;1825:2;1813:9;1804:7;1800:23;1796:32;1793:2;;;1841:1;1838;1831:12;1793:2;1884:1;1909:61;1962:7;1953:6;1942:9;1938:22;1909:61;:::i;:::-;1899:71;;1855:125;1783:204;;;;:::o;1993:284::-;;2112:2;2100:9;2091:7;2087:23;2083:32;2080:2;;;2128:1;2125;2118:12;2080:2;2171:1;2196:64;2252:7;2243:6;2232:9;2228:22;2196:64;:::i;:::-;2186:74;;2142:128;2070:207;;;;:::o;2283:108::-;2360:24;2378:5;2360:24;:::i;:::-;2355:3;2348:37;2338:53;;:::o;2397:118::-;2484:24;2502:5;2484:24;:::i;:::-;2479:3;2472:37;2462:53;;:::o;2521:99::-;2592:21;2607:5;2592:21;:::i;:::-;2587:3;2580:34;2570:50;;:::o;2626:360::-;;2740:38;2772:5;2740:38;:::i;:::-;2794:70;2857:6;2852:3;2794:70;:::i;:::-;2787:77;;2873:52;2918:6;2913:3;2906:4;2899:5;2895:16;2873:52;:::i;:::-;2950:29;2972:6;2950:29;:::i;:::-;2945:3;2941:39;2934:46;;2716:270;;;;;:::o;2992:193::-;3110:68;3172:5;3110:68;:::i;:::-;3105:3;3098:81;3088:97;;:::o;3191:175::-;3300:59;3353:5;3300:59;:::i;:::-;3295:3;3288:72;3278:88;;:::o;3372:161::-;3474:52;3520:5;3474:52;:::i;:::-;3469:3;3462:65;3452:81;;:::o;3539:366::-;;3702:67;3766:2;3761:3;3702:67;:::i;:::-;3695:74;;3778:93;3867:3;3778:93;:::i;:::-;3896:2;3891:3;3887:12;3880:19;;3685:220;;;:::o;3911:366::-;;4074:67;4138:2;4133:3;4074:67;:::i;:::-;4067:74;;4150:93;4239:3;4150:93;:::i;:::-;4268:2;4263:3;4259:12;4252:19;;4057:220;;;:::o;4337:1596::-;4480:6;4475:3;4471:16;4577:4;4570:5;4566:16;4560:23;4596:63;4653:4;4648:3;4644:14;4630:12;4596:63;:::i;:::-;4497:172;4758:4;4751:5;4747:16;4741:23;4777:63;4834:4;4829:3;4825:14;4811:12;4777:63;:::i;:::-;4679:171;4934:4;4927:5;4923:16;4917:23;4953:63;5010:4;5005:3;5001:14;4987:12;4953:63;:::i;:::-;4860:166;5116:4;5109:5;5105:16;5099:23;5135:63;5192:4;5187:3;5183:14;5169:12;5135:63;:::i;:::-;5036:172;5302:4;5295:5;5291:16;5285:23;5321:63;5378:4;5373:3;5369:14;5355:12;5321:63;:::i;:::-;5218:176;5489:4;5482:5;5478:16;5472:23;5508:63;5565:4;5560:3;5556:14;5542:12;5508:63;:::i;:::-;5404:177;5668:4;5661:5;5657:16;5651:23;5687:57;5738:4;5733:3;5729:14;5715:12;5687:57;:::i;:::-;5591:163;5840:4;5833:5;5829:16;5823:23;5859:57;5910:4;5905:3;5901:14;5887:12;5859:57;:::i;:::-;5764:162;4449:1484;;;:::o;5939:108::-;6016:24;6034:5;6016:24;:::i;:::-;6011:3;6004:37;5994:53;;:::o;6053:118::-;6140:24;6158:5;6140:24;:::i;:::-;6135:3;6128:37;6118:53;;:::o;6177:222::-;;6308:2;6297:9;6293:18;6285:26;;6321:71;6389:1;6378:9;6374:17;6365:6;6321:71;:::i;:::-;6275:124;;;;:::o;6405:332::-;;6564:2;6553:9;6549:18;6541:26;;6577:71;6645:1;6634:9;6630:17;6621:6;6577:71;:::i;:::-;6658:72;6726:2;6715:9;6711:18;6702:6;6658:72;:::i;:::-;6531:206;;;;;:::o;6743:442::-;;6930:2;6919:9;6915:18;6907:26;;6943:71;7011:1;7000:9;6996:17;6987:6;6943:71;:::i;:::-;7024:72;7092:2;7081:9;7077:18;7068:6;7024:72;:::i;:::-;7106;7174:2;7163:9;7159:18;7150:6;7106:72;:::i;:::-;6897:288;;;;;;:::o;7191:332::-;;7350:2;7339:9;7335:18;7327:26;;7363:71;7431:1;7420:9;7416:17;7407:6;7363:71;:::i;:::-;7444:72;7512:2;7501:9;7497:18;7488:6;7444:72;:::i;:::-;7317:206;;;;;:::o;7529:309::-;;7678:2;7667:9;7663:18;7655:26;;7727:9;7721:4;7717:20;7713:1;7702:9;7698:17;7691:47;7755:76;7826:4;7817:6;7755:76;:::i;:::-;7747:84;;7645:193;;;;:::o;7844:284::-;;8006:2;7995:9;7991:18;7983:26;;8019:102;8118:1;8107:9;8103:17;8094:6;8019:102;:::i;:::-;7973:155;;;;:::o;8134:266::-;;8287:2;8276:9;8272:18;8264:26;;8300:93;8390:1;8379:9;8375:17;8366:6;8300:93;:::i;:::-;8254:146;;;;:::o;8406:252::-;;8552:2;8541:9;8537:18;8529:26;;8565:86;8648:1;8637:9;8633:17;8624:6;8565:86;:::i;:::-;8519:139;;;;:::o;8664:419::-;;8868:2;8857:9;8853:18;8845:26;;8917:9;8911:4;8907:20;8903:1;8892:9;8888:17;8881:47;8945:131;9071:4;8945:131;:::i;:::-;8937:139;;8835:248;;;:::o;9089:419::-;;9293:2;9282:9;9278:18;9270:26;;9342:9;9336:4;9332:20;9328:1;9317:9;9313:17;9306:47;9370:131;9496:4;9370:131;:::i;:::-;9362:139;;9260:248;;;:::o;9514:315::-;;9691:3;9680:9;9676:19;9668:27;;9705:117;9819:1;9808:9;9804:17;9795:6;9705:117;:::i;:::-;9658:171;;;;:::o;9835:222::-;;9966:2;9955:9;9951:18;9943:26;;9979:71;10047:1;10036:9;10032:17;10023:6;9979:71;:::i;:::-;9933:124;;;;:::o;10063:75::-;;10129:2;10123:9;10113:19;;10103:35;:::o;10144:98::-;;10229:5;10223:12;10213:22;;10202:40;;;:::o;10248:168::-;;10365:6;10360:3;10353:19;10405:4;10400:3;10396:14;10381:29;;10343:73;;;;:::o;10422:169::-;;10540:6;10535:3;10528:19;10580:4;10575:3;10571:14;10556:29;;10518:73;;;;:::o;10597:185::-;;10654:20;10672:1;10654:20;:::i;:::-;10649:25;;10688:20;10706:1;10688:20;:::i;:::-;10683:25;;10727:1;10717:2;;10732:18;;:::i;:::-;10717:2;10774:1;10771;10767:9;10762:14;;10639:143;;;;:::o;10788:348::-;;10851:20;10869:1;10851:20;:::i;:::-;10846:25;;10885:20;10903:1;10885:20;:::i;:::-;10880:25;;11073:1;11005:66;11001:74;10998:1;10995:81;10990:1;10983:9;10976:17;10972:105;10969:2;;;11080:18;;:::i;:::-;10969:2;11128:1;11125;11121:9;11110:20;;10836:300;;;;:::o;11142:191::-;;11202:20;11220:1;11202:20;:::i;:::-;11197:25;;11236:20;11254:1;11236:20;:::i;:::-;11231:25;;11275:1;11272;11269:8;11266:2;;;11280:18;;:::i;:::-;11266:2;11325:1;11322;11318:9;11310:17;;11187:146;;;;:::o;11339:96::-;;11405:24;11423:5;11405:24;:::i;:::-;11394:35;;11384:51;;;:::o;11441:90::-;;11518:5;11511:13;11504:21;11493:32;;11483:48;;;:::o;11537:126::-;;11614:42;11607:5;11603:54;11592:65;;11582:81;;;:::o;11669:77::-;;11735:5;11724:16;;11714:32;;;:::o;11752:188::-;;11866:68;11928:5;11866:68;:::i;:::-;11853:81;;11843:97;;;:::o;11946:144::-;;12060:24;12078:5;12060:24;:::i;:::-;12047:37;;12037:53;;;:::o;12096:170::-;;12201:59;12254:5;12201:59;:::i;:::-;12188:72;;12178:88;;;:::o;12272:135::-;;12377:24;12395:5;12377:24;:::i;:::-;12364:37;;12354:53;;;:::o;12413:156::-;;12511:52;12557:5;12511:52;:::i;:::-;12498:65;;12488:81;;;:::o;12575:128::-;;12673:24;12691:5;12673:24;:::i;:::-;12660:37;;12650:53;;;:::o;12709:307::-;12777:1;12787:113;12801:6;12798:1;12795:13;12787:113;;;12886:1;12881:3;12877:11;12871:18;12867:1;12862:3;12858:11;12851:39;12823:2;12820:1;12816:10;12811:15;;12787:113;;;12918:6;12915:1;12912:13;12909:2;;;12998:1;12989:6;12984:3;12980:16;12973:27;12909:2;12758:258;;;;:::o;13022:281::-;13105:27;13127:4;13105:27;:::i;:::-;13097:6;13093:40;13235:6;13223:10;13220:22;13199:18;13187:10;13184:34;13181:62;13178:2;;;13246:18;;:::i;:::-;13178:2;13286:10;13282:2;13275:22;13065:238;;;:::o;13309:180::-;13357:77;13354:1;13347:88;13454:4;13451:1;13444:15;13478:4;13475:1;13468:15;13495:180;13543:77;13540:1;13533:88;13640:4;13637:1;13630:15;13664:4;13661:1;13654:15;13681:180;13729:77;13726:1;13719:88;13826:4;13823:1;13816:15;13850:4;13847:1;13840:15;13867:183;;13940:1;13922:16;13919:23;13916:2;;;13978:1;13975;13972;13957:23;14000:34;14031:1;14025:8;14000:34;:::i;:::-;13993:41;;13916:2;13906:144;:::o;14056:102::-;;14148:2;14144:7;14139:2;14132:5;14128:14;14124:28;14114:38;;14104:54;;;:::o;14164:163::-;;14259:60;14252:5;14248:72;14227:93;;14217:110;;;:::o;14333:182::-;14473:34;14469:1;14461:6;14457:14;14450:58;14439:76;:::o;14521:178::-;14661:30;14657:1;14649:6;14645:14;14638:54;14627:72;:::o;14705:711::-;;14782:4;14764:16;14761:26;14758:2;;;14790:5;;14758:2;14819:20;;:::i;:::-;14894:1;14876:16;14872:24;14869:1;14863:4;14848:49;14927:4;14921:11;15026:16;15019:4;15011:6;15007:17;15004:39;14971:18;14963:6;14960:30;14944:113;14941:2;;;15072:5;;;;14941:2;15118:6;15112:4;15108:17;15154:3;15148:10;15181:18;15173:6;15170:30;15167:2;;;15203:5;;;;;;15167:2;15251:6;15244:4;15239:3;15235:14;15231:27;15310:1;15292:16;15288:24;15282:4;15278:35;15273:3;15270:44;15267:2;;;15317:5;;;;;;;15267:2;15334:57;15382:6;15376:4;15372:17;15364:6;15360:30;15354:4;15334:57;:::i;:::-;15407:3;15400:10;;14748:668;;;;;;;:::o;15422:122::-;15495:24;15513:5;15495:24;:::i;:::-;15488:5;15485:35;15475:2;;15534:1;15531;15524:12;15475:2;15465:79;:::o;15550:116::-;15620:21;15635:5;15620:21;:::i;:::-;15613:5;15610:32;15600:2;;15656:1;15653;15646:12;15600:2;15590:76;:::o;15672:122::-;15745:24;15763:5;15745:24;:::i;:::-;15738:5;15735:35;15725:2;;15784:1;15781;15774:12;15725:2;15715:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.1;\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\r\nimport \"./CrowdsaleERC20Chainlink.sol\";\r\n\r\ncontract Staking {\r\n     \r\n    constructor(address crowdAddress) public {\r\n      tokenANTC = new ERC20Chainlink('ANTMONEY', 'ANTC');\r\n      crowd = CrowdsaleERC20Chainlink(crowdAddress);\r\n    }  \r\n     \r\n    ERC20Chainlink public tokenANTC;\r\n    AggregatorV3Interface internal priceFeed;\r\n    IERC20 public ERC20Interface;\r\n    uint public tempRewardsUSD;\r\n    uint public tempRewards;\r\n    uint public elapsedTime;\r\n    CrowdsaleERC20Chainlink public crowd;\r\n    \r\n    mapping(address => staker) stakers;\r\n    // gestion events\r\n    // objet staker avec temps debut fin quantité contrat staking user \r\n    struct staker{\r\n        uint startStaking;\r\n        uint stopStaking;\r\n        uint amount;\r\n        uint amountReward;\r\n        address chainlinkAddress;\r\n        address tokenERC20Address;\r\n        bool isStaking;\r\n        bool unstaked;\r\n    }\r\n    \r\n    event StakeToken(address user, address chainlinkAddress);\r\n    event UnStakeToken(address user, address chainlinkAddress);\r\n    event ErrorGetTheprice(bytes reason);\r\n    \r\n    // Public Functions\r\n    \r\n    // approve contract ERC20 with amount before by user to stake \r\n    function Stake(address chainlinkAddress, uint256 amount) external {\r\n        // we could stake only one token by time for one user\r\n        require(!stakers[msg.sender].isStaking, \"You have already stake one token\");\r\n        \r\n        if(stakers[msg.sender].unstaked){\r\n            delete(stakers[msg.sender]);\r\n        }\r\n        \r\n        distributeERC20(crowd.getAddressERC20(chainlinkAddress), amount);\r\n        stakers[msg.sender] = staker(block.timestamp,0,amount, 0, chainlinkAddress,crowd.getAddressERC20(chainlinkAddress),true, false);\r\n        emit StakeToken(msg.sender ,chainlinkAddress);\r\n    } \r\n    \r\n    // Approve token and then hive the calculated reward depending of time and price of the token staked\r\n    function UnStake() external {  // pause\r\n        stakers[msg.sender].stopStaking = block.timestamp;\r\n        unstakeERC20();\r\n        stakers[msg.sender].amountReward = CalculRewards();\r\n        tokenANTC.approve(msg.sender, stakers[msg.sender].amountReward);\r\n        approveContract();\r\n        GiveRewards();\r\n        stakers[msg.sender].unstaked = true;\r\n        stakers[msg.sender].isStaking = false;\r\n        emit UnStakeToken(msg.sender ,stakers[msg.sender].chainlinkAddress);\r\n    } \r\n    \r\n    // End Public Functions\r\n    \r\n    // Private Functions\r\n    \r\n    // to give rewards the house token must be approved \r\n    // to do get in the mapping object the amount of the reward\r\n    function approveContract() internal{\r\n        ERC20Chainlink(address(tokenANTC)).approve(address(this), stakers[msg.sender].amountReward);\r\n    }\r\n    \r\n    function GetTokenANTCAddress() view external returns(address) {\r\n      return address(tokenANTC);\r\n    }\r\n    \r\n    function getTokenPrice(address chainlinkAddress) public view returns(uint){\r\n        return crowd.getThePrice(chainlinkAddress);\r\n    }\r\n    \r\n    // get the reward stored in stakers\r\n    function getTokenRewardByUser() public view returns(uint){\r\n        return stakers[msg.sender].amountReward;\r\n    }\r\n    \r\n    function getDataUser() public view returns(staker memory) {\r\n        return stakers[msg.sender];\r\n    }\r\n\r\n    // take the token sent by user to be staked \r\n    function distributeERC20(address tokenAddress, uint256 amount) internal {\r\n        ERC20Chainlink(tokenAddress).approve(address(this), amount);\r\n        ERC20Chainlink(tokenAddress).transferFrom(msg.sender,address(this), amount);\r\n    }\r\n    \r\n    // unstaked the token to give it back to user\r\n    function unstakeERC20() internal {  \r\n        ERC20(stakers[msg.sender].tokenERC20Address).approve(msg.sender, stakers[msg.sender].amount);\r\n        ERC20(stakers[msg.sender].tokenERC20Address).transferFrom(address(this), msg.sender, stakers[msg.sender].amount);  \r\n    }\r\n    \r\n    function CalculRewards() internal returns(uint) {\r\n        // get the price in USD of the ERC20 Token staked in the contract\r\n        uint256 priceMoneyUSD = crowd.getThePrice(stakers[msg.sender].chainlinkAddress);\r\n        // calcul the reward during the time of staking\r\n        uint rewardUSD = SafeMath.mul(getRewardTime(), priceMoneyUSD);\r\n        rewardUSD = SafeMath.mul(rewardUSD, stakers[msg.sender].amount);\r\n        rewardUSD = SafeMath.div(rewardUSD, 1e18);\r\n        rewardUSD = SafeMath.div(rewardUSD, 1e8);\r\n        uint tokenReward = SafeMath.div(rewardUSD, getOwnTokenUSDPrice());\r\n        return tokenReward;\r\n    }\r\n    \r\n    // send to the user the reward with the tokenANTC \r\n    function GiveRewards() internal {\r\n        require(stakers[msg.sender].amountReward != 0, \"Reward is not yet calculated\");\r\n        tokenANTC.transferFrom(address(this), msg.sender, stakers[msg.sender].amountReward);\r\n    }\r\n    \r\n    function getRewardTime() internal view returns(uint) {\r\n        // 10% for one year\r\n        uint apy = SafeMath.div(SafeMath.mul(10, 1e18), 100);\r\n        uint oneYearInSeconds = 30758400;\r\n        uint elpasedTime = block.timestamp - stakers[msg.sender].startStaking;\r\n        uint apyElapsedTime = SafeMath.div(SafeMath.mul(apy, elpasedTime), oneYearInSeconds);\r\n        return apyElapsedTime;\r\n    }\r\n    \r\n    // we call chainlink price for our token and intercept error since the token is not listed\r\n    // by convention we sent 10 token for one USD\r\n    function getOwnTokenUSDPrice() internal returns(uint){\r\n        try crowd.getThePrice(address(tokenANTC)) returns(uint res){\r\n            return res;\r\n        }\r\n        catch Error(string memory){\r\n           return 10; \r\n        } catch (bytes memory reason) {\r\n            emit ErrorGetTheprice(reason);\r\n            return 10;\r\n        }\r\n    }\r\n    \r\n    // End private Functions\r\n}",
  "sourcePath": "C:/Node/StakingGanache/contracts/staking.sol",
  "ast": {
    "absolutePath": "/C/Node/StakingGanache/contracts/staking.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        964
      ],
      "Context": [
        1597
      ],
      "CrowdsaleERC20Chainlink": [
        287
      ],
      "ERC20": [
        1471
      ],
      "ERC20Chainlink": [
        311
      ],
      "IERC20": [
        1549
      ],
      "IERC20Metadata": [
        1574
      ],
      "SafeMath": [
        1909
      ],
      "Staking": [
        918
      ]
    },
    "id": 919,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 376,
        "literals": [
          "solidity",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 377,
        "nodeType": "ImportDirective",
        "scope": 919,
        "sourceUnit": 1910,
        "src": "61:57:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 378,
        "nodeType": "ImportDirective",
        "scope": 919,
        "sourceUnit": 965,
        "src": "120:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Node/StakingGanache/contracts/CrowdsaleERC20Chainlink.sol",
        "file": "./CrowdsaleERC20Chainlink.sol",
        "id": 379,
        "nodeType": "ImportDirective",
        "scope": 919,
        "sourceUnit": 288,
        "src": "198:39:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          311
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 918,
        "linearizedBaseContracts": [
          918
        ],
        "name": "Staking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "313:121:4",
              "statements": [
                {
                  "expression": {
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 384,
                      "name": "tokenANTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "322:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                        "typeString": "contract ERC20Chainlink"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "414e544d4f4e4559",
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "353:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10",
                            "typeString": "literal_string \"ANTMONEY\""
                          },
                          "value": "ANTMONEY"
                        },
                        {
                          "hexValue": "414e5443",
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "365:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1",
                            "typeString": "literal_string \"ANTC\""
                          },
                          "value": "ANTC"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10",
                            "typeString": "literal_string \"ANTMONEY\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1",
                            "typeString": "literal_string \"ANTC\""
                          }
                        ],
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "334:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20Chainlink_$311_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20Chainlink)"
                        },
                        "typeName": {
                          "id": 386,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 385,
                            "name": "ERC20Chainlink",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 311,
                            "src": "338:14:4"
                          },
                          "referencedDeclaration": 311,
                          "src": "338:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                            "typeString": "contract ERC20Chainlink"
                          }
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "334:38:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                        "typeString": "contract ERC20Chainlink"
                      }
                    },
                    "src": "322:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                      "typeString": "contract ERC20Chainlink"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "322:50:4"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 393,
                      "name": "crowd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "381:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                        "typeString": "contract CrowdsaleERC20Chainlink"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 395,
                          "name": "crowdAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 381,
                          "src": "413:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 394,
                        "name": "CrowdsaleERC20Chainlink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "389:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrowdsaleERC20Chainlink_$287_$",
                          "typeString": "type(contract CrowdsaleERC20Chainlink)"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "389:37:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                        "typeString": "contract CrowdsaleERC20Chainlink"
                      }
                    },
                    "src": "381:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                      "typeString": "contract CrowdsaleERC20Chainlink"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "381:45:4"
                }
              ]
            },
            "id": 400,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "crowdAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "284:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:22:4"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:0:4"
            },
            "scope": 918,
            "src": "272:162:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ca0b6690",
            "id": 403,
            "mutability": "mutable",
            "name": "tokenANTC",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "449:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
              "typeString": "contract ERC20Chainlink"
            },
            "typeName": {
              "id": 402,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 401,
                "name": "ERC20Chainlink",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 311,
                "src": "449:14:4"
              },
              "referencedDeclaration": 311,
              "src": "449:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                "typeString": "contract ERC20Chainlink"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 406,
            "mutability": "mutable",
            "name": "priceFeed",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "487:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$964",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 405,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 404,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 964,
                "src": "487:21:4"
              },
              "referencedDeclaration": 964,
              "src": "487:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$964",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1bbc4b83",
            "id": 409,
            "mutability": "mutable",
            "name": "ERC20Interface",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "534:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1549",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 408,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 407,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1549,
                "src": "534:6:4"
              },
              "referencedDeclaration": 1549,
              "src": "534:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1549",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d9c4c20e",
            "id": 411,
            "mutability": "mutable",
            "name": "tempRewardsUSD",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "569:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 410,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "569:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "227b0510",
            "id": 413,
            "mutability": "mutable",
            "name": "tempRewards",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "602:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 412,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "602:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "51453f9d",
            "id": 415,
            "mutability": "mutable",
            "name": "elapsedTime",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "632:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 414,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "632:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ca7bb3f5",
            "id": 418,
            "mutability": "mutable",
            "name": "crowd",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "662:36:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
              "typeString": "contract CrowdsaleERC20Chainlink"
            },
            "typeName": {
              "id": 417,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 416,
                "name": "CrowdsaleERC20Chainlink",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 287,
                "src": "662:23:4"
              },
              "referencedDeclaration": 287,
              "src": "662:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                "typeString": "contract CrowdsaleERC20Chainlink"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 423,
            "mutability": "mutable",
            "name": "stakers",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "711:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
              "typeString": "mapping(address => struct Staking.staker)"
            },
            "typeName": {
              "id": 422,
              "keyType": {
                "id": 419,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "719:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "711:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                "typeString": "mapping(address => struct Staking.staker)"
              },
              "valueType": {
                "id": 421,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 420,
                  "name": "staker",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 440,
                  "src": "730:6:4"
                },
                "referencedDeclaration": 440,
                "src": "730:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_staker_$440_storage_ptr",
                  "typeString": "struct Staking.staker"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Staking.staker",
            "id": 440,
            "members": [
              {
                "constant": false,
                "id": 425,
                "mutability": "mutable",
                "name": "startStaking",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "873:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 424,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "873:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 427,
                "mutability": "mutable",
                "name": "stopStaking",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "901:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 426,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "901:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 429,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "928:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 428,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "928:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 431,
                "mutability": "mutable",
                "name": "amountReward",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "950:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 430,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "950:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 433,
                "mutability": "mutable",
                "name": "chainlinkAddress",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "978:24:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 432,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "978:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 435,
                "mutability": "mutable",
                "name": "tokenERC20Address",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "1013:25:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 434,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1013:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 437,
                "mutability": "mutable",
                "name": "isStaking",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "1049:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 436,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1049:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 439,
                "mutability": "mutable",
                "name": "unstaked",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "1074:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 438,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1074:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "staker",
            "nodeType": "StructDefinition",
            "scope": 918,
            "src": "849:246:4",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 446,
            "name": "StakeToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "1124:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 444,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chainlinkAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "1138:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:40:4"
            },
            "src": "1107:57:4"
          },
          {
            "anonymous": false,
            "id": 452,
            "name": "UnStakeToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "1189:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chainlinkAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "1203:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1188:40:4"
            },
            "src": "1170:59:4"
          },
          {
            "anonymous": false,
            "id": 456,
            "name": "ErrorGetTheprice",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "1258:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:14:4"
            },
            "src": "1235:37:4"
          },
          {
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "1449:542:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1531:30:4",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 464,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "1532:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                "typeString": "mapping(address => struct Staking.staker storage ref)"
                              }
                            },
                            "id": 467,
                            "indexExpression": {
                              "expression": {
                                "id": 465,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1540:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1540:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1532:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staker_$440_storage",
                              "typeString": "struct Staking.staker storage ref"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStaking",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 437,
                          "src": "1532:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520616c7265616479207374616b65206f6e6520746f6b656e",
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f",
                          "typeString": "literal_string \"You have already stake one token\""
                        },
                        "value": "You have already stake one token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f",
                          "typeString": "literal_string \"You have already stake one token\""
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1523:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1523:75:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:75:4"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 473,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "1622:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                          "typeString": "mapping(address => struct Staking.staker storage ref)"
                        }
                      },
                      "id": 476,
                      "indexExpression": {
                        "expression": {
                          "id": 474,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1630:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1630:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1622:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_staker_$440_storage",
                        "typeString": "struct Staking.staker storage ref"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "unstaked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 439,
                    "src": "1622:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 486,
                  "nodeType": "IfStatement",
                  "src": "1619:86:4",
                  "trueBody": {
                    "id": 485,
                    "nodeType": "Block",
                    "src": "1651:54:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1666:27:4",
                          "subExpression": {
                            "components": [
                              {
                                "baseExpression": {
                                  "id": 478,
                                  "name": "stakers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 423,
                                  "src": "1673:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                    "typeString": "mapping(address => struct Staking.staker storage ref)"
                                  }
                                },
                                "id": 481,
                                "indexExpression": {
                                  "expression": {
                                    "id": 479,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1681:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 480,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1681:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "1673:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_staker_$440_storage",
                                  "typeString": "struct Staking.staker storage ref"
                                }
                              }
                            ],
                            "id": 482,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1672:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staker_$440_storage",
                              "typeString": "struct Staking.staker storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 484,
                        "nodeType": "ExpressionStatement",
                        "src": "1666:27:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 490,
                            "name": "chainlinkAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "1763:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 488,
                            "name": "crowd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "1741:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                              "typeString": "contract CrowdsaleERC20Chainlink"
                            }
                          },
                          "id": 489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAddressERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 125,
                          "src": "1741:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view external returns (address)"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1741:39:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 492,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "1782:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 487,
                      "name": "distributeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 693,
                      "src": "1725:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:64:4"
                },
                {
                  "expression": {
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 495,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "1800:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                          "typeString": "mapping(address => struct Staking.staker storage ref)"
                        }
                      },
                      "id": 498,
                      "indexExpression": {
                        "expression": {
                          "id": 496,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1808:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1808:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1800:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_staker_$440_storage",
                        "typeString": "struct Staking.staker storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 500,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1829:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1829:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1845:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 503,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "1847:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1855:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 505,
                          "name": "chainlinkAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "1858:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 508,
                              "name": "chainlinkAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "1897:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 506,
                              "name": "crowd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "1875:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                                "typeString": "contract CrowdsaleERC20Chainlink"
                              }
                            },
                            "id": 507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAddressERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 125,
                            "src": "1875:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1875:39:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1915:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1921:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 499,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "1822:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_staker_$440_storage_ptr_$",
                          "typeString": "type(struct Staking.staker storage pointer)"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1822:105:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_staker_$440_memory_ptr",
                        "typeString": "struct Staking.staker memory"
                      }
                    },
                    "src": "1800:127:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_staker_$440_storage",
                      "typeString": "struct Staking.staker storage ref"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:127:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 516,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1954:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1954:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 518,
                        "name": "chainlinkAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "1966:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 515,
                      "name": "StakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1943:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 520,
                  "nodeType": "EmitStatement",
                  "src": "1938:45:4"
                }
              ]
            },
            "functionSelector": "ebedb8b3",
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "chainlinkAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "1398:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "1424:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:42:4"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:0:4"
            },
            "scope": 918,
            "src": "1383:608:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 590,
              "nodeType": "Block",
              "src": "2138:462:4",
              "statements": [
                {
                  "expression": {
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 525,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "2159:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                            "typeString": "mapping(address => struct Staking.staker storage ref)"
                          }
                        },
                        "id": 528,
                        "indexExpression": {
                          "expression": {
                            "id": 526,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2167:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2167:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2159:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staker_$440_storage",
                          "typeString": "struct Staking.staker storage ref"
                        }
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stopStaking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 427,
                      "src": "2159:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 530,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2193:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2193:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2159:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:49:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 534,
                      "name": "unstakeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "2219:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2219:14:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "2219:14:4"
                },
                {
                  "expression": {
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 537,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "2244:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                            "typeString": "mapping(address => struct Staking.staker storage ref)"
                          }
                        },
                        "id": 540,
                        "indexExpression": {
                          "expression": {
                            "id": 538,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2252:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2252:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2244:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staker_$440_storage",
                          "typeString": "struct Staking.staker storage ref"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 431,
                      "src": "2244:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 542,
                        "name": "CalculRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "2279:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () returns (uint256)"
                        }
                      },
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2279:15:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2244:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "2244:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 549,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2323:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2323:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 551,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "2335:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 554,
                          "indexExpression": {
                            "expression": {
                              "id": 552,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2343:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2343:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2335:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 431,
                        "src": "2335:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 546,
                        "name": "tokenANTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "2305:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1123,
                      "src": "2305:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2305:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "2305:63:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 558,
                      "name": "approveContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "2379:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2379:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "2379:17:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 561,
                      "name": "GiveRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "2407:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:13:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "2407:13:4"
                },
                {
                  "expression": {
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 564,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "2431:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                            "typeString": "mapping(address => struct Staking.staker storage ref)"
                          }
                        },
                        "id": 567,
                        "indexExpression": {
                          "expression": {
                            "id": 565,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2439:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2439:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2431:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staker_$440_storage",
                          "typeString": "struct Staking.staker storage ref"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "unstaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 439,
                      "src": "2431:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2462:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2431:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "2431:35:4"
                },
                {
                  "expression": {
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 572,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "2477:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                            "typeString": "mapping(address => struct Staking.staker storage ref)"
                          }
                        },
                        "id": 575,
                        "indexExpression": {
                          "expression": {
                            "id": 573,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2485:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2485:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2477:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staker_$440_storage",
                          "typeString": "struct Staking.staker storage ref"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isStaking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 437,
                      "src": "2477:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2509:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2477:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "2477:37:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 581,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2543:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2543:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 583,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "2555:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 586,
                          "indexExpression": {
                            "expression": {
                              "id": 584,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2563:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2563:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2555:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainlinkAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 433,
                        "src": "2555:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 580,
                      "name": "UnStakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "2530:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2530:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "EmitStatement",
                  "src": "2525:67:4"
                }
              ]
            },
            "functionSelector": "ecb90615",
            "id": 591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "UnStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2126:2:4"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2138:0:4"
            },
            "scope": 918,
            "src": "2110:490:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "2838:110:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 603,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2900:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2892:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 601,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2892:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2892:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 605,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "2907:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 608,
                          "indexExpression": {
                            "expression": {
                              "id": 606,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2915:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2915:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2907:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 431,
                        "src": "2907:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 597,
                                "name": "tokenANTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 403,
                                "src": "2872:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                                  "typeString": "contract ERC20Chainlink"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                                  "typeString": "contract ERC20Chainlink"
                                }
                              ],
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2864:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 595,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2864:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2864:18:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 594,
                          "name": "ERC20Chainlink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "2849:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Chainlink_$311_$",
                            "typeString": "type(contract ERC20Chainlink)"
                          }
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2849:34:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1123,
                      "src": "2849:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2849:91:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "2849:91:4"
                }
              ]
            },
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2827:2:4"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2838:0:4"
            },
            "scope": 918,
            "src": "2803:145:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 623,
              "nodeType": "Block",
              "src": "3022:42:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 620,
                        "name": "tokenANTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "3046:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      ],
                      "id": 619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3038:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3038:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:18:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 617,
                  "id": 622,
                  "nodeType": "Return",
                  "src": "3031:25:4"
                }
              ]
            },
            "functionSelector": "2dc647c4",
            "id": 624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetTokenANTCAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2988:2:4"
            },
            "returnParameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "3013:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3012:9:4"
            },
            "scope": 918,
            "src": "2960:104:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "3150:61:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 633,
                        "name": "chainlinkAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "3186:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 631,
                        "name": "crowd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "3168:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                          "typeString": "contract CrowdsaleERC20Chainlink"
                        }
                      },
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getThePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 286,
                      "src": "3168:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3168:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 630,
                  "id": 635,
                  "nodeType": "Return",
                  "src": "3161:42:4"
                }
              ]
            },
            "functionSelector": "d02641a0",
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "chainlinkAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "3099:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3098:26:4"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "3145:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3145:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3144:6:4"
            },
            "scope": 918,
            "src": "3076:135:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "3321:58:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 642,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "3339:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                          "typeString": "mapping(address => struct Staking.staker storage ref)"
                        }
                      },
                      "id": 645,
                      "indexExpression": {
                        "expression": {
                          "id": 643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3347:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3347:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3339:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_staker_$440_storage",
                        "typeString": "struct Staking.staker storage ref"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amountReward",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 431,
                    "src": "3339:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 641,
                  "id": 647,
                  "nodeType": "Return",
                  "src": "3332:39:4"
                }
              ]
            },
            "functionSelector": "bb02b749",
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenRewardByUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3293:2:4"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "3316:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3316:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3315:6:4"
            },
            "scope": 918,
            "src": "3264:115:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "3449:45:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 655,
                      "name": "stakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "3467:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                        "typeString": "mapping(address => struct Staking.staker storage ref)"
                      }
                    },
                    "id": 658,
                    "indexExpression": {
                      "expression": {
                        "id": 656,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3475:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3475:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3467:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_staker_$440_storage",
                      "typeString": "struct Staking.staker storage ref"
                    }
                  },
                  "functionReturnParameters": 654,
                  "id": 659,
                  "nodeType": "Return",
                  "src": "3460:26:4"
                }
              ]
            },
            "functionSelector": "f4621daf",
            "id": 661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDataUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3411:2:4"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "3434:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_staker_$440_memory_ptr",
                    "typeString": "struct Staking.staker"
                  },
                  "typeName": {
                    "id": 652,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 651,
                      "name": "staker",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 440,
                      "src": "3434:6:4"
                    },
                    "referencedDeclaration": 440,
                    "src": "3434:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_staker_$440_storage_ptr",
                      "typeString": "struct Staking.staker"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3433:15:4"
            },
            "scope": 918,
            "src": "3391:103:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 692,
              "nodeType": "Block",
              "src": "3624:164:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 674,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3680:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3672:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 672,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3672:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3672:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 676,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "3687:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 669,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "3650:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 668,
                          "name": "ERC20Chainlink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "3635:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Chainlink_$311_$",
                            "typeString": "type(contract ERC20Chainlink)"
                          }
                        },
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3635:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1123,
                      "src": "3635:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 683,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3747:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3747:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 687,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3766:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3758:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 685,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3758:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3758:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 689,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "3773:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 680,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "3720:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 679,
                          "name": "ERC20Chainlink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "3705:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Chainlink_$311_$",
                            "typeString": "type(contract ERC20Chainlink)"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3705:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1170,
                      "src": "3705:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3705:75:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "3705:75:4"
                }
              ]
            },
            "id": 693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "3577:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3577:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "3599:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3576:38:4"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3624:0:4"
            },
            "scope": 918,
            "src": "3552:236:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "3884:238:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 704,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3950:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3950:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 706,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "3962:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 709,
                          "indexExpression": {
                            "expression": {
                              "id": 707,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3970:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3970:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3962:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 710,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 429,
                        "src": "3962:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 697,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "3903:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                  "typeString": "mapping(address => struct Staking.staker storage ref)"
                                }
                              },
                              "id": 700,
                              "indexExpression": {
                                "expression": {
                                  "id": 698,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3911:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3911:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3903:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staker_$440_storage",
                                "typeString": "struct Staking.staker storage ref"
                              }
                            },
                            "id": 701,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenERC20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 435,
                            "src": "3903:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 696,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1471,
                          "src": "3897:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1471_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3897:44:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1471",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1123,
                      "src": "3897:52:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3897:92:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "3897:92:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 723,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4066:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4058:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 721,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4058:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4058:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 725,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4073:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4073:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 727,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "4085:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 730,
                          "indexExpression": {
                            "expression": {
                              "id": 728,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4093:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4093:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4085:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 429,
                        "src": "4085:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 714,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "4006:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                  "typeString": "mapping(address => struct Staking.staker storage ref)"
                                }
                              },
                              "id": 717,
                              "indexExpression": {
                                "expression": {
                                  "id": 715,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4014:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4014:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4006:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staker_$440_storage",
                                "typeString": "struct Staking.staker storage ref"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenERC20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 435,
                            "src": "4006:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 713,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1471,
                          "src": "4000:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1471_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4000:44:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1471",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1170,
                      "src": "4000:57:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:112:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:112:4"
                }
              ]
            },
            "id": 735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3872:2:4"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3884:0:4"
            },
            "scope": 918,
            "src": "3851:271:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "4182:584:4",
              "statements": [
                {
                  "assignments": [
                    741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 741,
                      "mutability": "mutable",
                      "name": "priceMoneyUSD",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "4268:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 740,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4268:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 750,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 744,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "4310:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 747,
                          "indexExpression": {
                            "expression": {
                              "id": 745,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4318:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4318:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4310:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainlinkAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 433,
                        "src": "4310:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 742,
                        "name": "crowd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "4292:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                          "typeString": "contract CrowdsaleERC20Chainlink"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getThePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 286,
                      "src": "4292:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4292:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4268:79:4"
                },
                {
                  "assignments": [
                    752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 752,
                      "mutability": "mutable",
                      "name": "rewardUSD",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "4415:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 751,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4415:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 759,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 755,
                          "name": "getRewardTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 878,
                          "src": "4445:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4445:15:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 757,
                        "name": "priceMoneyUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "4462:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 753,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "4432:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1803,
                      "src": "4432:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4432:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4415:61:4"
                },
                {
                  "expression": {
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 760,
                      "name": "rewardUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "4487:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 763,
                          "name": "rewardUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "4512:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 764,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "4523:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                "typeString": "mapping(address => struct Staking.staker storage ref)"
                              }
                            },
                            "id": 767,
                            "indexExpression": {
                              "expression": {
                                "id": 765,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4531:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4531:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4523:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staker_$440_storage",
                              "typeString": "struct Staking.staker storage ref"
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 429,
                          "src": "4523:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 761,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1909,
                          "src": "4499:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1803,
                        "src": "4499:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4499:51:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4487:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "4487:63:4"
                },
                {
                  "expression": {
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 772,
                      "name": "rewardUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "4561:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 775,
                          "name": "rewardUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "4586:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31653138",
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4597:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 773,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1909,
                          "src": "4573:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1818,
                        "src": "4573:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4573:29:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4561:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "4561:41:4"
                },
                {
                  "expression": {
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 780,
                      "name": "rewardUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "4613:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 783,
                          "name": "rewardUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "4638:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "316538",
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4649:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "1e8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          }
                        ],
                        "expression": {
                          "id": 781,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1909,
                          "src": "4625:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1818,
                        "src": "4625:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4625:28:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4613:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "4613:40:4"
                },
                {
                  "assignments": [
                    789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 789,
                      "mutability": "mutable",
                      "name": "tokenReward",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "4664:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 788,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4664:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 796,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 792,
                        "name": "rewardUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "4696:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 793,
                          "name": "getOwnTokenUSDPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 917,
                          "src": "4707:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                            "typeString": "function () returns (uint256)"
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4707:21:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 790,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "4683:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1818,
                      "src": "4683:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4683:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4664:65:4"
                },
                {
                  "expression": {
                    "id": 797,
                    "name": "tokenReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 789,
                    "src": "4747:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 739,
                  "id": 798,
                  "nodeType": "Return",
                  "src": "4740:18:4"
                }
              ]
            },
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CalculRewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4156:2:4"
            },
            "returnParameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "4176:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4176:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4175:6:4"
            },
            "scope": 918,
            "src": "4134:632:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "4866:191:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 804,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "4885:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                "typeString": "mapping(address => struct Staking.staker storage ref)"
                              }
                            },
                            "id": 807,
                            "indexExpression": {
                              "expression": {
                                "id": 805,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4893:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4893:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4885:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staker_$440_storage",
                              "typeString": "struct Staking.staker storage ref"
                            }
                          },
                          "id": 808,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountReward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 431,
                          "src": "4885:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4921:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4885:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526577617264206973206e6f74207965742063616c63756c61746564",
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4924:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1",
                          "typeString": "literal_string \"Reward is not yet calculated\""
                        },
                        "value": "Reward is not yet calculated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1",
                          "typeString": "literal_string \"Reward is not yet calculated\""
                        }
                      ],
                      "id": 803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4877:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4877:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "4877:78:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 819,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4997:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4989:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 817,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4989:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4989:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 821,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5004:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5004:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 823,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "5016:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 826,
                          "indexExpression": {
                            "expression": {
                              "id": 824,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5024:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5024:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5016:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 431,
                        "src": "5016:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 814,
                        "name": "tokenANTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "4966:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1170,
                      "src": "4966:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:83:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:83:4"
                }
              ]
            },
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GiveRewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4854:2:4"
            },
            "returnParameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4866:0:4"
            },
            "scope": 918,
            "src": "4834:223:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 877,
              "nodeType": "Block",
              "src": "5122:350:4",
              "statements": [
                {
                  "assignments": [
                    837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 837,
                      "mutability": "mutable",
                      "name": "apy",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "5162:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 836,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5162:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 847,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3130",
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5199:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          {
                            "hexValue": "31653138",
                            "id": 843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5203:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 840,
                            "name": "SafeMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1909,
                            "src": "5186:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                              "typeString": "type(library SafeMath)"
                            }
                          },
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1803,
                          "src": "5186:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5186:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5210:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 838,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "5173:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1818,
                      "src": "5173:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5173:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5162:52:4"
                },
                {
                  "assignments": [
                    849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 849,
                      "mutability": "mutable",
                      "name": "oneYearInSeconds",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "5225:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 848,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5225:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 851,
                  "initialValue": {
                    "hexValue": "3330373538343030",
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5249:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_30758400_by_1",
                      "typeString": "int_const 30758400"
                    },
                    "value": "30758400"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5225:32:4"
                },
                {
                  "assignments": [
                    853
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 853,
                      "mutability": "mutable",
                      "name": "elpasedTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "5268:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 852,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5268:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 862,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 854,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5287:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5287:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 856,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "5305:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                            "typeString": "mapping(address => struct Staking.staker storage ref)"
                          }
                        },
                        "id": 859,
                        "indexExpression": {
                          "expression": {
                            "id": 857,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5313:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5313:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5305:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staker_$440_storage",
                          "typeString": "struct Staking.staker storage ref"
                        }
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startStaking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "5305:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5287:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5268:69:4"
                },
                {
                  "assignments": [
                    864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 864,
                      "mutability": "mutable",
                      "name": "apyElapsedTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "5348:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 863,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5348:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 874,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 869,
                            "name": "apy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "5396:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 870,
                            "name": "elpasedTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "5401:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 867,
                            "name": "SafeMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1909,
                            "src": "5383:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                              "typeString": "type(library SafeMath)"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1803,
                          "src": "5383:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5383:30:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 872,
                        "name": "oneYearInSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "5415:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 865,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "5370:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1818,
                      "src": "5370:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5370:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5348:84:4"
                },
                {
                  "expression": {
                    "id": 875,
                    "name": "apyElapsedTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 864,
                    "src": "5450:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 835,
                  "id": 876,
                  "nodeType": "Return",
                  "src": "5443:21:4"
                }
              ]
            },
            "id": 878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5091:2:4"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "5116:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5116:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5115:6:4"
            },
            "scope": 918,
            "src": "5069:403:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "5684:295:4",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 895,
                        "nodeType": "Block",
                        "src": "5754:37:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 893,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "5776:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 882,
                            "id": 894,
                            "nodeType": "Return",
                            "src": "5769:10:4"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 896,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 892,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 891,
                            "mutability": "mutable",
                            "name": "res",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "5745:8:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 890,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5745:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5744:10:4"
                      },
                      "src": "5737:54:4"
                    },
                    {
                      "block": {
                        "id": 902,
                        "nodeType": "Block",
                        "src": "5827:36:4",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "3130",
                              "id": 900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5848:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "functionReturnParameters": 882,
                            "id": 901,
                            "nodeType": "Return",
                            "src": "5841:9:4"
                          }
                        ]
                      },
                      "errorName": "Error",
                      "id": 903,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 899,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 898,
                            "mutability": "mutable",
                            "name": "",
                            "nodeType": "VariableDeclaration",
                            "scope": 903,
                            "src": "5813:13:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 897,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "5813:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5812:15:4"
                      },
                      "src": "5801:62:4"
                    },
                    {
                      "block": {
                        "id": 913,
                        "nodeType": "Block",
                        "src": "5892:80:4",
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 908,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 905,
                                  "src": "5929:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 907,
                                "name": "ErrorGetTheprice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 456,
                                "src": "5912:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory)"
                                }
                              },
                              "id": 909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5912:24:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 910,
                            "nodeType": "EmitStatement",
                            "src": "5907:29:4"
                          },
                          {
                            "expression": {
                              "hexValue": "3130",
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5958:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "functionReturnParameters": 882,
                            "id": 912,
                            "nodeType": "Return",
                            "src": "5951:9:4"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 914,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 906,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 905,
                            "mutability": "mutable",
                            "name": "reason",
                            "nodeType": "VariableDeclaration",
                            "scope": 914,
                            "src": "5871:19:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 904,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5871:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5870:21:4"
                      },
                      "src": "5864:108:4"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 887,
                            "name": "tokenANTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "5725:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                              "typeString": "contract ERC20Chainlink"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                              "typeString": "contract ERC20Chainlink"
                            }
                          ],
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5717:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 885,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5717:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5717:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 883,
                        "name": "crowd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "5699:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                          "typeString": "contract CrowdsaleERC20Chainlink"
                        }
                      },
                      "id": 884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getThePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 286,
                      "src": "5699:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5699:37:4",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 915,
                  "nodeType": "TryStatement",
                  "src": "5695:277:4"
                }
              ]
            },
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnTokenUSDPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5659:2:4"
            },
            "returnParameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "5679:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5679:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5678:6:4"
            },
            "scope": 918,
            "src": "5631:348:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 919,
        "src": "241:5777:4"
      }
    ],
    "src": "37:5981:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Node/StakingGanache/contracts/staking.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        964
      ],
      "Context": [
        1597
      ],
      "CrowdsaleERC20Chainlink": [
        287
      ],
      "ERC20": [
        1471
      ],
      "ERC20Chainlink": [
        311
      ],
      "IERC20": [
        1549
      ],
      "IERC20Metadata": [
        1574
      ],
      "SafeMath": [
        1909
      ],
      "Staking": [
        918
      ]
    },
    "id": 919,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 376,
        "literals": [
          "solidity",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 377,
        "nodeType": "ImportDirective",
        "scope": 919,
        "sourceUnit": 1910,
        "src": "61:57:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 378,
        "nodeType": "ImportDirective",
        "scope": 919,
        "sourceUnit": 965,
        "src": "120:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Node/StakingGanache/contracts/CrowdsaleERC20Chainlink.sol",
        "file": "./CrowdsaleERC20Chainlink.sol",
        "id": 379,
        "nodeType": "ImportDirective",
        "scope": 919,
        "sourceUnit": 288,
        "src": "198:39:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          311
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 918,
        "linearizedBaseContracts": [
          918
        ],
        "name": "Staking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "313:121:4",
              "statements": [
                {
                  "expression": {
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 384,
                      "name": "tokenANTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "322:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                        "typeString": "contract ERC20Chainlink"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "414e544d4f4e4559",
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "353:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10",
                            "typeString": "literal_string \"ANTMONEY\""
                          },
                          "value": "ANTMONEY"
                        },
                        {
                          "hexValue": "414e5443",
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "365:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1",
                            "typeString": "literal_string \"ANTC\""
                          },
                          "value": "ANTC"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_a83dcb7028d6a8bcfaa8f380ee1a00ddd2a09388008343edfaae8ed914aa9b10",
                            "typeString": "literal_string \"ANTMONEY\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1dcde749da249cd4c202e565ff1280f125bed85795800491abd57efb3aa8ceb1",
                            "typeString": "literal_string \"ANTC\""
                          }
                        ],
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "334:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20Chainlink_$311_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20Chainlink)"
                        },
                        "typeName": {
                          "id": 386,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 385,
                            "name": "ERC20Chainlink",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 311,
                            "src": "338:14:4"
                          },
                          "referencedDeclaration": 311,
                          "src": "338:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                            "typeString": "contract ERC20Chainlink"
                          }
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "334:38:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                        "typeString": "contract ERC20Chainlink"
                      }
                    },
                    "src": "322:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                      "typeString": "contract ERC20Chainlink"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "322:50:4"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 393,
                      "name": "crowd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "381:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                        "typeString": "contract CrowdsaleERC20Chainlink"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 395,
                          "name": "crowdAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 381,
                          "src": "413:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 394,
                        "name": "CrowdsaleERC20Chainlink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "389:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrowdsaleERC20Chainlink_$287_$",
                          "typeString": "type(contract CrowdsaleERC20Chainlink)"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "389:37:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                        "typeString": "contract CrowdsaleERC20Chainlink"
                      }
                    },
                    "src": "381:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                      "typeString": "contract CrowdsaleERC20Chainlink"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "381:45:4"
                }
              ]
            },
            "id": 400,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "crowdAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "284:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:22:4"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:0:4"
            },
            "scope": 918,
            "src": "272:162:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ca0b6690",
            "id": 403,
            "mutability": "mutable",
            "name": "tokenANTC",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "449:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
              "typeString": "contract ERC20Chainlink"
            },
            "typeName": {
              "id": 402,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 401,
                "name": "ERC20Chainlink",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 311,
                "src": "449:14:4"
              },
              "referencedDeclaration": 311,
              "src": "449:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                "typeString": "contract ERC20Chainlink"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 406,
            "mutability": "mutable",
            "name": "priceFeed",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "487:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$964",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 405,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 404,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 964,
                "src": "487:21:4"
              },
              "referencedDeclaration": 964,
              "src": "487:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$964",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "1bbc4b83",
            "id": 409,
            "mutability": "mutable",
            "name": "ERC20Interface",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "534:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1549",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 408,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 407,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1549,
                "src": "534:6:4"
              },
              "referencedDeclaration": 1549,
              "src": "534:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1549",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d9c4c20e",
            "id": 411,
            "mutability": "mutable",
            "name": "tempRewardsUSD",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "569:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 410,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "569:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "227b0510",
            "id": 413,
            "mutability": "mutable",
            "name": "tempRewards",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "602:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 412,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "602:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "51453f9d",
            "id": 415,
            "mutability": "mutable",
            "name": "elapsedTime",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "632:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 414,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "632:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ca7bb3f5",
            "id": 418,
            "mutability": "mutable",
            "name": "crowd",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "662:36:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
              "typeString": "contract CrowdsaleERC20Chainlink"
            },
            "typeName": {
              "id": 417,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 416,
                "name": "CrowdsaleERC20Chainlink",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 287,
                "src": "662:23:4"
              },
              "referencedDeclaration": 287,
              "src": "662:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                "typeString": "contract CrowdsaleERC20Chainlink"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 423,
            "mutability": "mutable",
            "name": "stakers",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "711:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
              "typeString": "mapping(address => struct Staking.staker)"
            },
            "typeName": {
              "id": 422,
              "keyType": {
                "id": 419,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "719:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "711:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                "typeString": "mapping(address => struct Staking.staker)"
              },
              "valueType": {
                "id": 421,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 420,
                  "name": "staker",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 440,
                  "src": "730:6:4"
                },
                "referencedDeclaration": 440,
                "src": "730:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_staker_$440_storage_ptr",
                  "typeString": "struct Staking.staker"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Staking.staker",
            "id": 440,
            "members": [
              {
                "constant": false,
                "id": 425,
                "mutability": "mutable",
                "name": "startStaking",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "873:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 424,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "873:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 427,
                "mutability": "mutable",
                "name": "stopStaking",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "901:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 426,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "901:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 429,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "928:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 428,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "928:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 431,
                "mutability": "mutable",
                "name": "amountReward",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "950:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 430,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "950:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 433,
                "mutability": "mutable",
                "name": "chainlinkAddress",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "978:24:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 432,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "978:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 435,
                "mutability": "mutable",
                "name": "tokenERC20Address",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "1013:25:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 434,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1013:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 437,
                "mutability": "mutable",
                "name": "isStaking",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "1049:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 436,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1049:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 439,
                "mutability": "mutable",
                "name": "unstaked",
                "nodeType": "VariableDeclaration",
                "scope": 440,
                "src": "1074:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 438,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1074:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "staker",
            "nodeType": "StructDefinition",
            "scope": 918,
            "src": "849:246:4",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 446,
            "name": "StakeToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "1124:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 444,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chainlinkAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "1138:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:40:4"
            },
            "src": "1107:57:4"
          },
          {
            "anonymous": false,
            "id": 452,
            "name": "UnStakeToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "1189:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chainlinkAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "1203:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1188:40:4"
            },
            "src": "1170:59:4"
          },
          {
            "anonymous": false,
            "id": 456,
            "name": "ErrorGetTheprice",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "1258:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:14:4"
            },
            "src": "1235:37:4"
          },
          {
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "1449:542:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1531:30:4",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 464,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "1532:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                "typeString": "mapping(address => struct Staking.staker storage ref)"
                              }
                            },
                            "id": 467,
                            "indexExpression": {
                              "expression": {
                                "id": 465,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1540:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1540:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1532:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staker_$440_storage",
                              "typeString": "struct Staking.staker storage ref"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStaking",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 437,
                          "src": "1532:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520616c7265616479207374616b65206f6e6520746f6b656e",
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f",
                          "typeString": "literal_string \"You have already stake one token\""
                        },
                        "value": "You have already stake one token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1d1519e6d3125184818d33fc40619c4cd4641ec8c87a82eec1a38535a246b9f",
                          "typeString": "literal_string \"You have already stake one token\""
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1523:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1523:75:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:75:4"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 473,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "1622:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                          "typeString": "mapping(address => struct Staking.staker storage ref)"
                        }
                      },
                      "id": 476,
                      "indexExpression": {
                        "expression": {
                          "id": 474,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1630:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1630:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1622:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_staker_$440_storage",
                        "typeString": "struct Staking.staker storage ref"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "unstaked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 439,
                    "src": "1622:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 486,
                  "nodeType": "IfStatement",
                  "src": "1619:86:4",
                  "trueBody": {
                    "id": 485,
                    "nodeType": "Block",
                    "src": "1651:54:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1666:27:4",
                          "subExpression": {
                            "components": [
                              {
                                "baseExpression": {
                                  "id": 478,
                                  "name": "stakers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 423,
                                  "src": "1673:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                    "typeString": "mapping(address => struct Staking.staker storage ref)"
                                  }
                                },
                                "id": 481,
                                "indexExpression": {
                                  "expression": {
                                    "id": 479,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1681:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 480,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1681:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "1673:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_staker_$440_storage",
                                  "typeString": "struct Staking.staker storage ref"
                                }
                              }
                            ],
                            "id": 482,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1672:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staker_$440_storage",
                              "typeString": "struct Staking.staker storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 484,
                        "nodeType": "ExpressionStatement",
                        "src": "1666:27:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 490,
                            "name": "chainlinkAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "1763:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 488,
                            "name": "crowd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "1741:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                              "typeString": "contract CrowdsaleERC20Chainlink"
                            }
                          },
                          "id": 489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAddressERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 125,
                          "src": "1741:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view external returns (address)"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1741:39:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 492,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "1782:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 487,
                      "name": "distributeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 693,
                      "src": "1725:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:64:4"
                },
                {
                  "expression": {
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 495,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "1800:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                          "typeString": "mapping(address => struct Staking.staker storage ref)"
                        }
                      },
                      "id": 498,
                      "indexExpression": {
                        "expression": {
                          "id": 496,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1808:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1808:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1800:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_staker_$440_storage",
                        "typeString": "struct Staking.staker storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 500,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1829:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1829:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1845:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 503,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "1847:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1855:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 505,
                          "name": "chainlinkAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "1858:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 508,
                              "name": "chainlinkAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "1897:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 506,
                              "name": "crowd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "1875:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                                "typeString": "contract CrowdsaleERC20Chainlink"
                              }
                            },
                            "id": 507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAddressERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 125,
                            "src": "1875:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1875:39:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1915:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1921:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 499,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "1822:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_staker_$440_storage_ptr_$",
                          "typeString": "type(struct Staking.staker storage pointer)"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1822:105:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_staker_$440_memory_ptr",
                        "typeString": "struct Staking.staker memory"
                      }
                    },
                    "src": "1800:127:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_staker_$440_storage",
                      "typeString": "struct Staking.staker storage ref"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:127:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 516,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1954:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1954:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 518,
                        "name": "chainlinkAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "1966:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 515,
                      "name": "StakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1943:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 520,
                  "nodeType": "EmitStatement",
                  "src": "1938:45:4"
                }
              ]
            },
            "functionSelector": "ebedb8b3",
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "chainlinkAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "1398:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "1424:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:42:4"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:0:4"
            },
            "scope": 918,
            "src": "1383:608:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 590,
              "nodeType": "Block",
              "src": "2138:462:4",
              "statements": [
                {
                  "expression": {
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 525,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "2159:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                            "typeString": "mapping(address => struct Staking.staker storage ref)"
                          }
                        },
                        "id": 528,
                        "indexExpression": {
                          "expression": {
                            "id": 526,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2167:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2167:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2159:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staker_$440_storage",
                          "typeString": "struct Staking.staker storage ref"
                        }
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stopStaking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 427,
                      "src": "2159:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 530,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2193:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2193:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2159:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:49:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 534,
                      "name": "unstakeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "2219:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2219:14:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "2219:14:4"
                },
                {
                  "expression": {
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 537,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "2244:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                            "typeString": "mapping(address => struct Staking.staker storage ref)"
                          }
                        },
                        "id": 540,
                        "indexExpression": {
                          "expression": {
                            "id": 538,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2252:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2252:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2244:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staker_$440_storage",
                          "typeString": "struct Staking.staker storage ref"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 431,
                      "src": "2244:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 542,
                        "name": "CalculRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "2279:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () returns (uint256)"
                        }
                      },
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2279:15:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2244:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "2244:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 549,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2323:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2323:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 551,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "2335:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 554,
                          "indexExpression": {
                            "expression": {
                              "id": 552,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2343:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2343:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2335:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 431,
                        "src": "2335:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 546,
                        "name": "tokenANTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "2305:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1123,
                      "src": "2305:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2305:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "2305:63:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 558,
                      "name": "approveContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "2379:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2379:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "2379:17:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 561,
                      "name": "GiveRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "2407:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:13:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "2407:13:4"
                },
                {
                  "expression": {
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 564,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "2431:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                            "typeString": "mapping(address => struct Staking.staker storage ref)"
                          }
                        },
                        "id": 567,
                        "indexExpression": {
                          "expression": {
                            "id": 565,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2439:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2439:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2431:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staker_$440_storage",
                          "typeString": "struct Staking.staker storage ref"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "unstaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 439,
                      "src": "2431:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2462:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2431:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "2431:35:4"
                },
                {
                  "expression": {
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 572,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "2477:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                            "typeString": "mapping(address => struct Staking.staker storage ref)"
                          }
                        },
                        "id": 575,
                        "indexExpression": {
                          "expression": {
                            "id": 573,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2485:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2485:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2477:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staker_$440_storage",
                          "typeString": "struct Staking.staker storage ref"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isStaking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 437,
                      "src": "2477:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2509:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2477:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "2477:37:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 581,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2543:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2543:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 583,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "2555:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 586,
                          "indexExpression": {
                            "expression": {
                              "id": 584,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2563:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2563:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2555:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainlinkAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 433,
                        "src": "2555:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 580,
                      "name": "UnStakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "2530:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2530:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "EmitStatement",
                  "src": "2525:67:4"
                }
              ]
            },
            "functionSelector": "ecb90615",
            "id": 591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "UnStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2126:2:4"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2138:0:4"
            },
            "scope": 918,
            "src": "2110:490:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "2838:110:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 603,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2900:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2892:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 601,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2892:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2892:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 605,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "2907:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 608,
                          "indexExpression": {
                            "expression": {
                              "id": 606,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2915:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2915:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2907:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 431,
                        "src": "2907:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 597,
                                "name": "tokenANTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 403,
                                "src": "2872:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                                  "typeString": "contract ERC20Chainlink"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                                  "typeString": "contract ERC20Chainlink"
                                }
                              ],
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2864:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 595,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2864:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2864:18:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 594,
                          "name": "ERC20Chainlink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "2849:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Chainlink_$311_$",
                            "typeString": "type(contract ERC20Chainlink)"
                          }
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2849:34:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1123,
                      "src": "2849:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2849:91:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "2849:91:4"
                }
              ]
            },
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2827:2:4"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2838:0:4"
            },
            "scope": 918,
            "src": "2803:145:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 623,
              "nodeType": "Block",
              "src": "3022:42:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 620,
                        "name": "tokenANTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "3046:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      ],
                      "id": 619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3038:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3038:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:18:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 617,
                  "id": 622,
                  "nodeType": "Return",
                  "src": "3031:25:4"
                }
              ]
            },
            "functionSelector": "2dc647c4",
            "id": 624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetTokenANTCAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2988:2:4"
            },
            "returnParameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "3013:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3012:9:4"
            },
            "scope": 918,
            "src": "2960:104:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "3150:61:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 633,
                        "name": "chainlinkAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "3186:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 631,
                        "name": "crowd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "3168:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                          "typeString": "contract CrowdsaleERC20Chainlink"
                        }
                      },
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getThePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 286,
                      "src": "3168:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3168:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 630,
                  "id": 635,
                  "nodeType": "Return",
                  "src": "3161:42:4"
                }
              ]
            },
            "functionSelector": "d02641a0",
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "chainlinkAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "3099:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3098:26:4"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "3145:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3145:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3144:6:4"
            },
            "scope": 918,
            "src": "3076:135:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "3321:58:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 642,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "3339:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                          "typeString": "mapping(address => struct Staking.staker storage ref)"
                        }
                      },
                      "id": 645,
                      "indexExpression": {
                        "expression": {
                          "id": 643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3347:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3347:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3339:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_staker_$440_storage",
                        "typeString": "struct Staking.staker storage ref"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amountReward",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 431,
                    "src": "3339:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 641,
                  "id": 647,
                  "nodeType": "Return",
                  "src": "3332:39:4"
                }
              ]
            },
            "functionSelector": "bb02b749",
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenRewardByUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3293:2:4"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "3316:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3316:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3315:6:4"
            },
            "scope": 918,
            "src": "3264:115:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "3449:45:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 655,
                      "name": "stakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "3467:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                        "typeString": "mapping(address => struct Staking.staker storage ref)"
                      }
                    },
                    "id": 658,
                    "indexExpression": {
                      "expression": {
                        "id": 656,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3475:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3475:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3467:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_staker_$440_storage",
                      "typeString": "struct Staking.staker storage ref"
                    }
                  },
                  "functionReturnParameters": 654,
                  "id": 659,
                  "nodeType": "Return",
                  "src": "3460:26:4"
                }
              ]
            },
            "functionSelector": "f4621daf",
            "id": 661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDataUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3411:2:4"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "3434:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_staker_$440_memory_ptr",
                    "typeString": "struct Staking.staker"
                  },
                  "typeName": {
                    "id": 652,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 651,
                      "name": "staker",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 440,
                      "src": "3434:6:4"
                    },
                    "referencedDeclaration": 440,
                    "src": "3434:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_staker_$440_storage_ptr",
                      "typeString": "struct Staking.staker"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3433:15:4"
            },
            "scope": 918,
            "src": "3391:103:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 692,
              "nodeType": "Block",
              "src": "3624:164:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 674,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3680:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3672:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 672,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3672:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3672:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 676,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "3687:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 669,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "3650:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 668,
                          "name": "ERC20Chainlink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "3635:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Chainlink_$311_$",
                            "typeString": "type(contract ERC20Chainlink)"
                          }
                        },
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3635:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1123,
                      "src": "3635:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 683,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3747:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3747:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 687,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3766:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3758:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 685,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3758:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3758:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 689,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "3773:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 680,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "3720:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 679,
                          "name": "ERC20Chainlink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "3705:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Chainlink_$311_$",
                            "typeString": "type(contract ERC20Chainlink)"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3705:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1170,
                      "src": "3705:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3705:75:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "3705:75:4"
                }
              ]
            },
            "id": 693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "3577:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3577:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "3599:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3576:38:4"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3624:0:4"
            },
            "scope": 918,
            "src": "3552:236:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "3884:238:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 704,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3950:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3950:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 706,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "3962:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 709,
                          "indexExpression": {
                            "expression": {
                              "id": 707,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3970:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3970:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3962:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 710,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 429,
                        "src": "3962:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 697,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "3903:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                  "typeString": "mapping(address => struct Staking.staker storage ref)"
                                }
                              },
                              "id": 700,
                              "indexExpression": {
                                "expression": {
                                  "id": 698,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3911:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3911:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3903:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staker_$440_storage",
                                "typeString": "struct Staking.staker storage ref"
                              }
                            },
                            "id": 701,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenERC20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 435,
                            "src": "3903:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 696,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1471,
                          "src": "3897:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1471_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3897:44:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1471",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1123,
                      "src": "3897:52:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3897:92:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "3897:92:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 723,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4066:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4058:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 721,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4058:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4058:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 725,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4073:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4073:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 727,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "4085:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 730,
                          "indexExpression": {
                            "expression": {
                              "id": 728,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4093:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4093:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4085:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 429,
                        "src": "4085:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 714,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "4006:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                  "typeString": "mapping(address => struct Staking.staker storage ref)"
                                }
                              },
                              "id": 717,
                              "indexExpression": {
                                "expression": {
                                  "id": 715,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4014:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4014:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4006:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_staker_$440_storage",
                                "typeString": "struct Staking.staker storage ref"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenERC20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 435,
                            "src": "4006:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 713,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1471,
                          "src": "4000:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1471_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4000:44:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1471",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1170,
                      "src": "4000:57:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:112:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:112:4"
                }
              ]
            },
            "id": 735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3872:2:4"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3884:0:4"
            },
            "scope": 918,
            "src": "3851:271:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "4182:584:4",
              "statements": [
                {
                  "assignments": [
                    741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 741,
                      "mutability": "mutable",
                      "name": "priceMoneyUSD",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "4268:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 740,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4268:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 750,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 744,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "4310:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 747,
                          "indexExpression": {
                            "expression": {
                              "id": 745,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4318:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4318:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4310:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainlinkAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 433,
                        "src": "4310:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 742,
                        "name": "crowd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "4292:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                          "typeString": "contract CrowdsaleERC20Chainlink"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getThePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 286,
                      "src": "4292:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4292:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4268:79:4"
                },
                {
                  "assignments": [
                    752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 752,
                      "mutability": "mutable",
                      "name": "rewardUSD",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "4415:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 751,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4415:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 759,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 755,
                          "name": "getRewardTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 878,
                          "src": "4445:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4445:15:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 757,
                        "name": "priceMoneyUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "4462:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 753,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "4432:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1803,
                      "src": "4432:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4432:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4415:61:4"
                },
                {
                  "expression": {
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 760,
                      "name": "rewardUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "4487:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 763,
                          "name": "rewardUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "4512:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 764,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "4523:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                "typeString": "mapping(address => struct Staking.staker storage ref)"
                              }
                            },
                            "id": 767,
                            "indexExpression": {
                              "expression": {
                                "id": 765,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4531:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4531:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4523:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staker_$440_storage",
                              "typeString": "struct Staking.staker storage ref"
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 429,
                          "src": "4523:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 761,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1909,
                          "src": "4499:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1803,
                        "src": "4499:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4499:51:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4487:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "4487:63:4"
                },
                {
                  "expression": {
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 772,
                      "name": "rewardUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "4561:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 775,
                          "name": "rewardUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "4586:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31653138",
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4597:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 773,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1909,
                          "src": "4573:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1818,
                        "src": "4573:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4573:29:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4561:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "4561:41:4"
                },
                {
                  "expression": {
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 780,
                      "name": "rewardUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "4613:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 783,
                          "name": "rewardUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "4638:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "316538",
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4649:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "1e8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          }
                        ],
                        "expression": {
                          "id": 781,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1909,
                          "src": "4625:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1818,
                        "src": "4625:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4625:28:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4613:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "4613:40:4"
                },
                {
                  "assignments": [
                    789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 789,
                      "mutability": "mutable",
                      "name": "tokenReward",
                      "nodeType": "VariableDeclaration",
                      "scope": 799,
                      "src": "4664:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 788,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4664:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 796,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 792,
                        "name": "rewardUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "4696:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 793,
                          "name": "getOwnTokenUSDPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 917,
                          "src": "4707:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                            "typeString": "function () returns (uint256)"
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4707:21:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 790,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "4683:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1818,
                      "src": "4683:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4683:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4664:65:4"
                },
                {
                  "expression": {
                    "id": 797,
                    "name": "tokenReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 789,
                    "src": "4747:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 739,
                  "id": 798,
                  "nodeType": "Return",
                  "src": "4740:18:4"
                }
              ]
            },
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CalculRewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4156:2:4"
            },
            "returnParameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "4176:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4176:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4175:6:4"
            },
            "scope": 918,
            "src": "4134:632:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "4866:191:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 804,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "4885:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                                "typeString": "mapping(address => struct Staking.staker storage ref)"
                              }
                            },
                            "id": 807,
                            "indexExpression": {
                              "expression": {
                                "id": 805,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4893:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4893:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4885:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_staker_$440_storage",
                              "typeString": "struct Staking.staker storage ref"
                            }
                          },
                          "id": 808,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountReward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 431,
                          "src": "4885:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4921:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4885:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526577617264206973206e6f74207965742063616c63756c61746564",
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4924:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1",
                          "typeString": "literal_string \"Reward is not yet calculated\""
                        },
                        "value": "Reward is not yet calculated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d57a6450e5cf0bff4d005034f087dfb4f29756219cd57b887d3601ad8af0a2e1",
                          "typeString": "literal_string \"Reward is not yet calculated\""
                        }
                      ],
                      "id": 803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4877:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4877:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "4877:78:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 819,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4997:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$918",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4989:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 817,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4989:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4989:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 821,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5004:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5004:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 823,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "5016:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                              "typeString": "mapping(address => struct Staking.staker storage ref)"
                            }
                          },
                          "id": 826,
                          "indexExpression": {
                            "expression": {
                              "id": 824,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5024:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5024:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5016:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_staker_$440_storage",
                            "typeString": "struct Staking.staker storage ref"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 431,
                        "src": "5016:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 814,
                        "name": "tokenANTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "4966:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                          "typeString": "contract ERC20Chainlink"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1170,
                      "src": "4966:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:83:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:83:4"
                }
              ]
            },
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GiveRewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4854:2:4"
            },
            "returnParameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4866:0:4"
            },
            "scope": 918,
            "src": "4834:223:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 877,
              "nodeType": "Block",
              "src": "5122:350:4",
              "statements": [
                {
                  "assignments": [
                    837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 837,
                      "mutability": "mutable",
                      "name": "apy",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "5162:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 836,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5162:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 847,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3130",
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5199:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          {
                            "hexValue": "31653138",
                            "id": 843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5203:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 840,
                            "name": "SafeMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1909,
                            "src": "5186:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                              "typeString": "type(library SafeMath)"
                            }
                          },
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1803,
                          "src": "5186:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5186:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5210:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 838,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "5173:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1818,
                      "src": "5173:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5173:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5162:52:4"
                },
                {
                  "assignments": [
                    849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 849,
                      "mutability": "mutable",
                      "name": "oneYearInSeconds",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "5225:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 848,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5225:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 851,
                  "initialValue": {
                    "hexValue": "3330373538343030",
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5249:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_30758400_by_1",
                      "typeString": "int_const 30758400"
                    },
                    "value": "30758400"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5225:32:4"
                },
                {
                  "assignments": [
                    853
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 853,
                      "mutability": "mutable",
                      "name": "elpasedTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "5268:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 852,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5268:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 862,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 854,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5287:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5287:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 856,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "5305:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_staker_$440_storage_$",
                            "typeString": "mapping(address => struct Staking.staker storage ref)"
                          }
                        },
                        "id": 859,
                        "indexExpression": {
                          "expression": {
                            "id": 857,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5313:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5313:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5305:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_staker_$440_storage",
                          "typeString": "struct Staking.staker storage ref"
                        }
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startStaking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "5305:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5287:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5268:69:4"
                },
                {
                  "assignments": [
                    864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 864,
                      "mutability": "mutable",
                      "name": "apyElapsedTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "5348:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 863,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5348:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 874,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 869,
                            "name": "apy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "5396:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 870,
                            "name": "elpasedTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "5401:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 867,
                            "name": "SafeMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1909,
                            "src": "5383:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                              "typeString": "type(library SafeMath)"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1803,
                          "src": "5383:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5383:30:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 872,
                        "name": "oneYearInSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "5415:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 865,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "5370:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1909_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1818,
                      "src": "5370:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5370:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5348:84:4"
                },
                {
                  "expression": {
                    "id": 875,
                    "name": "apyElapsedTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 864,
                    "src": "5450:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 835,
                  "id": 876,
                  "nodeType": "Return",
                  "src": "5443:21:4"
                }
              ]
            },
            "id": 878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5091:2:4"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "5116:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5116:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5115:6:4"
            },
            "scope": 918,
            "src": "5069:403:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "5684:295:4",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 895,
                        "nodeType": "Block",
                        "src": "5754:37:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 893,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "5776:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 882,
                            "id": 894,
                            "nodeType": "Return",
                            "src": "5769:10:4"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 896,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 892,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 891,
                            "mutability": "mutable",
                            "name": "res",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "5745:8:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 890,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5745:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5744:10:4"
                      },
                      "src": "5737:54:4"
                    },
                    {
                      "block": {
                        "id": 902,
                        "nodeType": "Block",
                        "src": "5827:36:4",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "3130",
                              "id": 900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5848:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "functionReturnParameters": 882,
                            "id": 901,
                            "nodeType": "Return",
                            "src": "5841:9:4"
                          }
                        ]
                      },
                      "errorName": "Error",
                      "id": 903,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 899,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 898,
                            "mutability": "mutable",
                            "name": "",
                            "nodeType": "VariableDeclaration",
                            "scope": 903,
                            "src": "5813:13:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 897,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "5813:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5812:15:4"
                      },
                      "src": "5801:62:4"
                    },
                    {
                      "block": {
                        "id": 913,
                        "nodeType": "Block",
                        "src": "5892:80:4",
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 908,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 905,
                                  "src": "5929:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 907,
                                "name": "ErrorGetTheprice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 456,
                                "src": "5912:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory)"
                                }
                              },
                              "id": 909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5912:24:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 910,
                            "nodeType": "EmitStatement",
                            "src": "5907:29:4"
                          },
                          {
                            "expression": {
                              "hexValue": "3130",
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5958:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "functionReturnParameters": 882,
                            "id": 912,
                            "nodeType": "Return",
                            "src": "5951:9:4"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 914,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 906,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 905,
                            "mutability": "mutable",
                            "name": "reason",
                            "nodeType": "VariableDeclaration",
                            "scope": 914,
                            "src": "5871:19:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 904,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5871:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5870:21:4"
                      },
                      "src": "5864:108:4"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 887,
                            "name": "tokenANTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "5725:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                              "typeString": "contract ERC20Chainlink"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Chainlink_$311",
                              "typeString": "contract ERC20Chainlink"
                            }
                          ],
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5717:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 885,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5717:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5717:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 883,
                        "name": "crowd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "5699:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrowdsaleERC20Chainlink_$287",
                          "typeString": "contract CrowdsaleERC20Chainlink"
                        }
                      },
                      "id": 884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getThePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 286,
                      "src": "5699:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5699:37:4",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 915,
                  "nodeType": "TryStatement",
                  "src": "5695:277:4"
                }
              ]
            },
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnTokenUSDPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5659:2:4"
            },
            "returnParameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "5679:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5679:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5678:6:4"
            },
            "scope": 918,
            "src": "5631:348:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 919,
        "src": "241:5777:4"
      }
    ],
    "src": "37:5981:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x327a9046986Ab34e29c09Ec10bFefe805E543270",
      "transactionHash": "0x99d9ee874e92c3c001a0991b1e7b5881b84461c9731c0be1affe432fc0131066"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-03T08:02:56.872Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}